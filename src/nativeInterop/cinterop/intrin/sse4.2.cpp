#include <immintrin.h>

#include "sse4.2.h"

int sse4_2_cmpestra(__m128i a, int la, __m128i b, int lb, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpestra(a, la, b, lb, 0x00);
		case 0x01: return _mm_cmpestra(a, la, b, lb, 0x01);
		case 0x02: return _mm_cmpestra(a, la, b, lb, 0x02);
		case 0x03: return _mm_cmpestra(a, la, b, lb, 0x03);
		case 0x04: return _mm_cmpestra(a, la, b, lb, 0x04);
		case 0x05: return _mm_cmpestra(a, la, b, lb, 0x05);
		case 0x06: return _mm_cmpestra(a, la, b, lb, 0x06);
		case 0x07: return _mm_cmpestra(a, la, b, lb, 0x07);
		case 0x08: return _mm_cmpestra(a, la, b, lb, 0x08);
		case 0x09: return _mm_cmpestra(a, la, b, lb, 0x09);
		case 0x0A: return _mm_cmpestra(a, la, b, lb, 0x0A);
		case 0x0B: return _mm_cmpestra(a, la, b, lb, 0x0B);
		case 0x0C: return _mm_cmpestra(a, la, b, lb, 0x0C);
		case 0x0D: return _mm_cmpestra(a, la, b, lb, 0x0D);
		case 0x0E: return _mm_cmpestra(a, la, b, lb, 0x0E);
		case 0x0F: return _mm_cmpestra(a, la, b, lb, 0x0F);
		case 0x10: return _mm_cmpestra(a, la, b, lb, 0x10);
		case 0x11: return _mm_cmpestra(a, la, b, lb, 0x11);
		case 0x12: return _mm_cmpestra(a, la, b, lb, 0x12);
		case 0x13: return _mm_cmpestra(a, la, b, lb, 0x13);
		case 0x14: return _mm_cmpestra(a, la, b, lb, 0x14);
		case 0x15: return _mm_cmpestra(a, la, b, lb, 0x15);
		case 0x16: return _mm_cmpestra(a, la, b, lb, 0x16);
		case 0x17: return _mm_cmpestra(a, la, b, lb, 0x17);
		case 0x18: return _mm_cmpestra(a, la, b, lb, 0x18);
		case 0x19: return _mm_cmpestra(a, la, b, lb, 0x19);
		case 0x1A: return _mm_cmpestra(a, la, b, lb, 0x1A);
		case 0x1B: return _mm_cmpestra(a, la, b, lb, 0x1B);
		case 0x1C: return _mm_cmpestra(a, la, b, lb, 0x1C);
		case 0x1D: return _mm_cmpestra(a, la, b, lb, 0x1D);
		case 0x1E: return _mm_cmpestra(a, la, b, lb, 0x1E);
		case 0x1F: return _mm_cmpestra(a, la, b, lb, 0x1F);
		case 0x20: return _mm_cmpestra(a, la, b, lb, 0x20);
		case 0x21: return _mm_cmpestra(a, la, b, lb, 0x21);
		case 0x22: return _mm_cmpestra(a, la, b, lb, 0x22);
		case 0x23: return _mm_cmpestra(a, la, b, lb, 0x23);
		case 0x24: return _mm_cmpestra(a, la, b, lb, 0x24);
		case 0x25: return _mm_cmpestra(a, la, b, lb, 0x25);
		case 0x26: return _mm_cmpestra(a, la, b, lb, 0x26);
		case 0x27: return _mm_cmpestra(a, la, b, lb, 0x27);
		case 0x28: return _mm_cmpestra(a, la, b, lb, 0x28);
		case 0x29: return _mm_cmpestra(a, la, b, lb, 0x29);
		case 0x2A: return _mm_cmpestra(a, la, b, lb, 0x2A);
		case 0x2B: return _mm_cmpestra(a, la, b, lb, 0x2B);
		case 0x2C: return _mm_cmpestra(a, la, b, lb, 0x2C);
		case 0x2D: return _mm_cmpestra(a, la, b, lb, 0x2D);
		case 0x2E: return _mm_cmpestra(a, la, b, lb, 0x2E);
		case 0x2F: return _mm_cmpestra(a, la, b, lb, 0x2F);
		case 0x30: return _mm_cmpestra(a, la, b, lb, 0x30);
		case 0x31: return _mm_cmpestra(a, la, b, lb, 0x31);
		case 0x32: return _mm_cmpestra(a, la, b, lb, 0x32);
		case 0x33: return _mm_cmpestra(a, la, b, lb, 0x33);
		case 0x34: return _mm_cmpestra(a, la, b, lb, 0x34);
		case 0x35: return _mm_cmpestra(a, la, b, lb, 0x35);
		case 0x36: return _mm_cmpestra(a, la, b, lb, 0x36);
		case 0x37: return _mm_cmpestra(a, la, b, lb, 0x37);
		case 0x38: return _mm_cmpestra(a, la, b, lb, 0x38);
		case 0x39: return _mm_cmpestra(a, la, b, lb, 0x39);
		case 0x3A: return _mm_cmpestra(a, la, b, lb, 0x3A);
		case 0x3B: return _mm_cmpestra(a, la, b, lb, 0x3B);
		case 0x3C: return _mm_cmpestra(a, la, b, lb, 0x3C);
		case 0x3D: return _mm_cmpestra(a, la, b, lb, 0x3D);
		case 0x3E: return _mm_cmpestra(a, la, b, lb, 0x3E);
		case 0x3F: return _mm_cmpestra(a, la, b, lb, 0x3F);
		case 0x40: return _mm_cmpestra(a, la, b, lb, 0x40);
		case 0x41: return _mm_cmpestra(a, la, b, lb, 0x41);
		case 0x42: return _mm_cmpestra(a, la, b, lb, 0x42);
		case 0x43: return _mm_cmpestra(a, la, b, lb, 0x43);
		case 0x44: return _mm_cmpestra(a, la, b, lb, 0x44);
		case 0x45: return _mm_cmpestra(a, la, b, lb, 0x45);
		case 0x46: return _mm_cmpestra(a, la, b, lb, 0x46);
		case 0x47: return _mm_cmpestra(a, la, b, lb, 0x47);
		case 0x48: return _mm_cmpestra(a, la, b, lb, 0x48);
		case 0x49: return _mm_cmpestra(a, la, b, lb, 0x49);
		case 0x4A: return _mm_cmpestra(a, la, b, lb, 0x4A);
		case 0x4B: return _mm_cmpestra(a, la, b, lb, 0x4B);
		case 0x4C: return _mm_cmpestra(a, la, b, lb, 0x4C);
		case 0x4D: return _mm_cmpestra(a, la, b, lb, 0x4D);
		case 0x4E: return _mm_cmpestra(a, la, b, lb, 0x4E);
		case 0x4F: return _mm_cmpestra(a, la, b, lb, 0x4F);
		case 0x50: return _mm_cmpestra(a, la, b, lb, 0x50);
		case 0x51: return _mm_cmpestra(a, la, b, lb, 0x51);
		case 0x52: return _mm_cmpestra(a, la, b, lb, 0x52);
		case 0x53: return _mm_cmpestra(a, la, b, lb, 0x53);
		case 0x54: return _mm_cmpestra(a, la, b, lb, 0x54);
		case 0x55: return _mm_cmpestra(a, la, b, lb, 0x55);
		case 0x56: return _mm_cmpestra(a, la, b, lb, 0x56);
		case 0x57: return _mm_cmpestra(a, la, b, lb, 0x57);
		case 0x58: return _mm_cmpestra(a, la, b, lb, 0x58);
		case 0x59: return _mm_cmpestra(a, la, b, lb, 0x59);
		case 0x5A: return _mm_cmpestra(a, la, b, lb, 0x5A);
		case 0x5B: return _mm_cmpestra(a, la, b, lb, 0x5B);
		case 0x5C: return _mm_cmpestra(a, la, b, lb, 0x5C);
		case 0x5D: return _mm_cmpestra(a, la, b, lb, 0x5D);
		case 0x5E: return _mm_cmpestra(a, la, b, lb, 0x5E);
		case 0x5F: return _mm_cmpestra(a, la, b, lb, 0x5F);
		case 0x60: return _mm_cmpestra(a, la, b, lb, 0x60);
		case 0x61: return _mm_cmpestra(a, la, b, lb, 0x61);
		case 0x62: return _mm_cmpestra(a, la, b, lb, 0x62);
		case 0x63: return _mm_cmpestra(a, la, b, lb, 0x63);
		case 0x64: return _mm_cmpestra(a, la, b, lb, 0x64);
		case 0x65: return _mm_cmpestra(a, la, b, lb, 0x65);
		case 0x66: return _mm_cmpestra(a, la, b, lb, 0x66);
		case 0x67: return _mm_cmpestra(a, la, b, lb, 0x67);
		case 0x68: return _mm_cmpestra(a, la, b, lb, 0x68);
		case 0x69: return _mm_cmpestra(a, la, b, lb, 0x69);
		case 0x6A: return _mm_cmpestra(a, la, b, lb, 0x6A);
		case 0x6B: return _mm_cmpestra(a, la, b, lb, 0x6B);
		case 0x6C: return _mm_cmpestra(a, la, b, lb, 0x6C);
		case 0x6D: return _mm_cmpestra(a, la, b, lb, 0x6D);
		case 0x6E: return _mm_cmpestra(a, la, b, lb, 0x6E);
		case 0x6F: return _mm_cmpestra(a, la, b, lb, 0x6F);
		case 0x70: return _mm_cmpestra(a, la, b, lb, 0x70);
		case 0x71: return _mm_cmpestra(a, la, b, lb, 0x71);
		case 0x72: return _mm_cmpestra(a, la, b, lb, 0x72);
		case 0x73: return _mm_cmpestra(a, la, b, lb, 0x73);
		case 0x74: return _mm_cmpestra(a, la, b, lb, 0x74);
		case 0x75: return _mm_cmpestra(a, la, b, lb, 0x75);
		case 0x76: return _mm_cmpestra(a, la, b, lb, 0x76);
		case 0x77: return _mm_cmpestra(a, la, b, lb, 0x77);
		case 0x78: return _mm_cmpestra(a, la, b, lb, 0x78);
		case 0x79: return _mm_cmpestra(a, la, b, lb, 0x79);
		case 0x7A: return _mm_cmpestra(a, la, b, lb, 0x7A);
		case 0x7B: return _mm_cmpestra(a, la, b, lb, 0x7B);
		case 0x7C: return _mm_cmpestra(a, la, b, lb, 0x7C);
		case 0x7D: return _mm_cmpestra(a, la, b, lb, 0x7D);
		case 0x7E: return _mm_cmpestra(a, la, b, lb, 0x7E);
		default:   return _mm_cmpestra(a, la, b, lb, 0x7F);
	}
}

int sse4_2_cmpestrc(__m128i a, int la, __m128i b, int lb, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpestrc(a, la, b, lb, 0x00);
		case 0x01: return _mm_cmpestrc(a, la, b, lb, 0x01);
		case 0x02: return _mm_cmpestrc(a, la, b, lb, 0x02);
		case 0x03: return _mm_cmpestrc(a, la, b, lb, 0x03);
		case 0x04: return _mm_cmpestrc(a, la, b, lb, 0x04);
		case 0x05: return _mm_cmpestrc(a, la, b, lb, 0x05);
		case 0x06: return _mm_cmpestrc(a, la, b, lb, 0x06);
		case 0x07: return _mm_cmpestrc(a, la, b, lb, 0x07);
		case 0x08: return _mm_cmpestrc(a, la, b, lb, 0x08);
		case 0x09: return _mm_cmpestrc(a, la, b, lb, 0x09);
		case 0x0A: return _mm_cmpestrc(a, la, b, lb, 0x0A);
		case 0x0B: return _mm_cmpestrc(a, la, b, lb, 0x0B);
		case 0x0C: return _mm_cmpestrc(a, la, b, lb, 0x0C);
		case 0x0D: return _mm_cmpestrc(a, la, b, lb, 0x0D);
		case 0x0E: return _mm_cmpestrc(a, la, b, lb, 0x0E);
		case 0x0F: return _mm_cmpestrc(a, la, b, lb, 0x0F);
		case 0x10: return _mm_cmpestrc(a, la, b, lb, 0x10);
		case 0x11: return _mm_cmpestrc(a, la, b, lb, 0x11);
		case 0x12: return _mm_cmpestrc(a, la, b, lb, 0x12);
		case 0x13: return _mm_cmpestrc(a, la, b, lb, 0x13);
		case 0x14: return _mm_cmpestrc(a, la, b, lb, 0x14);
		case 0x15: return _mm_cmpestrc(a, la, b, lb, 0x15);
		case 0x16: return _mm_cmpestrc(a, la, b, lb, 0x16);
		case 0x17: return _mm_cmpestrc(a, la, b, lb, 0x17);
		case 0x18: return _mm_cmpestrc(a, la, b, lb, 0x18);
		case 0x19: return _mm_cmpestrc(a, la, b, lb, 0x19);
		case 0x1A: return _mm_cmpestrc(a, la, b, lb, 0x1A);
		case 0x1B: return _mm_cmpestrc(a, la, b, lb, 0x1B);
		case 0x1C: return _mm_cmpestrc(a, la, b, lb, 0x1C);
		case 0x1D: return _mm_cmpestrc(a, la, b, lb, 0x1D);
		case 0x1E: return _mm_cmpestrc(a, la, b, lb, 0x1E);
		case 0x1F: return _mm_cmpestrc(a, la, b, lb, 0x1F);
		case 0x20: return _mm_cmpestrc(a, la, b, lb, 0x20);
		case 0x21: return _mm_cmpestrc(a, la, b, lb, 0x21);
		case 0x22: return _mm_cmpestrc(a, la, b, lb, 0x22);
		case 0x23: return _mm_cmpestrc(a, la, b, lb, 0x23);
		case 0x24: return _mm_cmpestrc(a, la, b, lb, 0x24);
		case 0x25: return _mm_cmpestrc(a, la, b, lb, 0x25);
		case 0x26: return _mm_cmpestrc(a, la, b, lb, 0x26);
		case 0x27: return _mm_cmpestrc(a, la, b, lb, 0x27);
		case 0x28: return _mm_cmpestrc(a, la, b, lb, 0x28);
		case 0x29: return _mm_cmpestrc(a, la, b, lb, 0x29);
		case 0x2A: return _mm_cmpestrc(a, la, b, lb, 0x2A);
		case 0x2B: return _mm_cmpestrc(a, la, b, lb, 0x2B);
		case 0x2C: return _mm_cmpestrc(a, la, b, lb, 0x2C);
		case 0x2D: return _mm_cmpestrc(a, la, b, lb, 0x2D);
		case 0x2E: return _mm_cmpestrc(a, la, b, lb, 0x2E);
		case 0x2F: return _mm_cmpestrc(a, la, b, lb, 0x2F);
		case 0x30: return _mm_cmpestrc(a, la, b, lb, 0x30);
		case 0x31: return _mm_cmpestrc(a, la, b, lb, 0x31);
		case 0x32: return _mm_cmpestrc(a, la, b, lb, 0x32);
		case 0x33: return _mm_cmpestrc(a, la, b, lb, 0x33);
		case 0x34: return _mm_cmpestrc(a, la, b, lb, 0x34);
		case 0x35: return _mm_cmpestrc(a, la, b, lb, 0x35);
		case 0x36: return _mm_cmpestrc(a, la, b, lb, 0x36);
		case 0x37: return _mm_cmpestrc(a, la, b, lb, 0x37);
		case 0x38: return _mm_cmpestrc(a, la, b, lb, 0x38);
		case 0x39: return _mm_cmpestrc(a, la, b, lb, 0x39);
		case 0x3A: return _mm_cmpestrc(a, la, b, lb, 0x3A);
		case 0x3B: return _mm_cmpestrc(a, la, b, lb, 0x3B);
		case 0x3C: return _mm_cmpestrc(a, la, b, lb, 0x3C);
		case 0x3D: return _mm_cmpestrc(a, la, b, lb, 0x3D);
		case 0x3E: return _mm_cmpestrc(a, la, b, lb, 0x3E);
		case 0x3F: return _mm_cmpestrc(a, la, b, lb, 0x3F);
		case 0x40: return _mm_cmpestrc(a, la, b, lb, 0x40);
		case 0x41: return _mm_cmpestrc(a, la, b, lb, 0x41);
		case 0x42: return _mm_cmpestrc(a, la, b, lb, 0x42);
		case 0x43: return _mm_cmpestrc(a, la, b, lb, 0x43);
		case 0x44: return _mm_cmpestrc(a, la, b, lb, 0x44);
		case 0x45: return _mm_cmpestrc(a, la, b, lb, 0x45);
		case 0x46: return _mm_cmpestrc(a, la, b, lb, 0x46);
		case 0x47: return _mm_cmpestrc(a, la, b, lb, 0x47);
		case 0x48: return _mm_cmpestrc(a, la, b, lb, 0x48);
		case 0x49: return _mm_cmpestrc(a, la, b, lb, 0x49);
		case 0x4A: return _mm_cmpestrc(a, la, b, lb, 0x4A);
		case 0x4B: return _mm_cmpestrc(a, la, b, lb, 0x4B);
		case 0x4C: return _mm_cmpestrc(a, la, b, lb, 0x4C);
		case 0x4D: return _mm_cmpestrc(a, la, b, lb, 0x4D);
		case 0x4E: return _mm_cmpestrc(a, la, b, lb, 0x4E);
		case 0x4F: return _mm_cmpestrc(a, la, b, lb, 0x4F);
		case 0x50: return _mm_cmpestrc(a, la, b, lb, 0x50);
		case 0x51: return _mm_cmpestrc(a, la, b, lb, 0x51);
		case 0x52: return _mm_cmpestrc(a, la, b, lb, 0x52);
		case 0x53: return _mm_cmpestrc(a, la, b, lb, 0x53);
		case 0x54: return _mm_cmpestrc(a, la, b, lb, 0x54);
		case 0x55: return _mm_cmpestrc(a, la, b, lb, 0x55);
		case 0x56: return _mm_cmpestrc(a, la, b, lb, 0x56);
		case 0x57: return _mm_cmpestrc(a, la, b, lb, 0x57);
		case 0x58: return _mm_cmpestrc(a, la, b, lb, 0x58);
		case 0x59: return _mm_cmpestrc(a, la, b, lb, 0x59);
		case 0x5A: return _mm_cmpestrc(a, la, b, lb, 0x5A);
		case 0x5B: return _mm_cmpestrc(a, la, b, lb, 0x5B);
		case 0x5C: return _mm_cmpestrc(a, la, b, lb, 0x5C);
		case 0x5D: return _mm_cmpestrc(a, la, b, lb, 0x5D);
		case 0x5E: return _mm_cmpestrc(a, la, b, lb, 0x5E);
		case 0x5F: return _mm_cmpestrc(a, la, b, lb, 0x5F);
		case 0x60: return _mm_cmpestrc(a, la, b, lb, 0x60);
		case 0x61: return _mm_cmpestrc(a, la, b, lb, 0x61);
		case 0x62: return _mm_cmpestrc(a, la, b, lb, 0x62);
		case 0x63: return _mm_cmpestrc(a, la, b, lb, 0x63);
		case 0x64: return _mm_cmpestrc(a, la, b, lb, 0x64);
		case 0x65: return _mm_cmpestrc(a, la, b, lb, 0x65);
		case 0x66: return _mm_cmpestrc(a, la, b, lb, 0x66);
		case 0x67: return _mm_cmpestrc(a, la, b, lb, 0x67);
		case 0x68: return _mm_cmpestrc(a, la, b, lb, 0x68);
		case 0x69: return _mm_cmpestrc(a, la, b, lb, 0x69);
		case 0x6A: return _mm_cmpestrc(a, la, b, lb, 0x6A);
		case 0x6B: return _mm_cmpestrc(a, la, b, lb, 0x6B);
		case 0x6C: return _mm_cmpestrc(a, la, b, lb, 0x6C);
		case 0x6D: return _mm_cmpestrc(a, la, b, lb, 0x6D);
		case 0x6E: return _mm_cmpestrc(a, la, b, lb, 0x6E);
		case 0x6F: return _mm_cmpestrc(a, la, b, lb, 0x6F);
		case 0x70: return _mm_cmpestrc(a, la, b, lb, 0x70);
		case 0x71: return _mm_cmpestrc(a, la, b, lb, 0x71);
		case 0x72: return _mm_cmpestrc(a, la, b, lb, 0x72);
		case 0x73: return _mm_cmpestrc(a, la, b, lb, 0x73);
		case 0x74: return _mm_cmpestrc(a, la, b, lb, 0x74);
		case 0x75: return _mm_cmpestrc(a, la, b, lb, 0x75);
		case 0x76: return _mm_cmpestrc(a, la, b, lb, 0x76);
		case 0x77: return _mm_cmpestrc(a, la, b, lb, 0x77);
		case 0x78: return _mm_cmpestrc(a, la, b, lb, 0x78);
		case 0x79: return _mm_cmpestrc(a, la, b, lb, 0x79);
		case 0x7A: return _mm_cmpestrc(a, la, b, lb, 0x7A);
		case 0x7B: return _mm_cmpestrc(a, la, b, lb, 0x7B);
		case 0x7C: return _mm_cmpestrc(a, la, b, lb, 0x7C);
		case 0x7D: return _mm_cmpestrc(a, la, b, lb, 0x7D);
		case 0x7E: return _mm_cmpestrc(a, la, b, lb, 0x7E);
		default:   return _mm_cmpestrc(a, la, b, lb, 0x7F);
	}
}

int sse4_2_cmpestri(__m128i a, int la, __m128i b, int lb, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpestri(a, la, b, lb, 0x00);
		case 0x01: return _mm_cmpestri(a, la, b, lb, 0x01);
		case 0x02: return _mm_cmpestri(a, la, b, lb, 0x02);
		case 0x03: return _mm_cmpestri(a, la, b, lb, 0x03);
		case 0x04: return _mm_cmpestri(a, la, b, lb, 0x04);
		case 0x05: return _mm_cmpestri(a, la, b, lb, 0x05);
		case 0x06: return _mm_cmpestri(a, la, b, lb, 0x06);
		case 0x07: return _mm_cmpestri(a, la, b, lb, 0x07);
		case 0x08: return _mm_cmpestri(a, la, b, lb, 0x08);
		case 0x09: return _mm_cmpestri(a, la, b, lb, 0x09);
		case 0x0A: return _mm_cmpestri(a, la, b, lb, 0x0A);
		case 0x0B: return _mm_cmpestri(a, la, b, lb, 0x0B);
		case 0x0C: return _mm_cmpestri(a, la, b, lb, 0x0C);
		case 0x0D: return _mm_cmpestri(a, la, b, lb, 0x0D);
		case 0x0E: return _mm_cmpestri(a, la, b, lb, 0x0E);
		case 0x0F: return _mm_cmpestri(a, la, b, lb, 0x0F);
		case 0x10: return _mm_cmpestri(a, la, b, lb, 0x10);
		case 0x11: return _mm_cmpestri(a, la, b, lb, 0x11);
		case 0x12: return _mm_cmpestri(a, la, b, lb, 0x12);
		case 0x13: return _mm_cmpestri(a, la, b, lb, 0x13);
		case 0x14: return _mm_cmpestri(a, la, b, lb, 0x14);
		case 0x15: return _mm_cmpestri(a, la, b, lb, 0x15);
		case 0x16: return _mm_cmpestri(a, la, b, lb, 0x16);
		case 0x17: return _mm_cmpestri(a, la, b, lb, 0x17);
		case 0x18: return _mm_cmpestri(a, la, b, lb, 0x18);
		case 0x19: return _mm_cmpestri(a, la, b, lb, 0x19);
		case 0x1A: return _mm_cmpestri(a, la, b, lb, 0x1A);
		case 0x1B: return _mm_cmpestri(a, la, b, lb, 0x1B);
		case 0x1C: return _mm_cmpestri(a, la, b, lb, 0x1C);
		case 0x1D: return _mm_cmpestri(a, la, b, lb, 0x1D);
		case 0x1E: return _mm_cmpestri(a, la, b, lb, 0x1E);
		case 0x1F: return _mm_cmpestri(a, la, b, lb, 0x1F);
		case 0x20: return _mm_cmpestri(a, la, b, lb, 0x20);
		case 0x21: return _mm_cmpestri(a, la, b, lb, 0x21);
		case 0x22: return _mm_cmpestri(a, la, b, lb, 0x22);
		case 0x23: return _mm_cmpestri(a, la, b, lb, 0x23);
		case 0x24: return _mm_cmpestri(a, la, b, lb, 0x24);
		case 0x25: return _mm_cmpestri(a, la, b, lb, 0x25);
		case 0x26: return _mm_cmpestri(a, la, b, lb, 0x26);
		case 0x27: return _mm_cmpestri(a, la, b, lb, 0x27);
		case 0x28: return _mm_cmpestri(a, la, b, lb, 0x28);
		case 0x29: return _mm_cmpestri(a, la, b, lb, 0x29);
		case 0x2A: return _mm_cmpestri(a, la, b, lb, 0x2A);
		case 0x2B: return _mm_cmpestri(a, la, b, lb, 0x2B);
		case 0x2C: return _mm_cmpestri(a, la, b, lb, 0x2C);
		case 0x2D: return _mm_cmpestri(a, la, b, lb, 0x2D);
		case 0x2E: return _mm_cmpestri(a, la, b, lb, 0x2E);
		case 0x2F: return _mm_cmpestri(a, la, b, lb, 0x2F);
		case 0x30: return _mm_cmpestri(a, la, b, lb, 0x30);
		case 0x31: return _mm_cmpestri(a, la, b, lb, 0x31);
		case 0x32: return _mm_cmpestri(a, la, b, lb, 0x32);
		case 0x33: return _mm_cmpestri(a, la, b, lb, 0x33);
		case 0x34: return _mm_cmpestri(a, la, b, lb, 0x34);
		case 0x35: return _mm_cmpestri(a, la, b, lb, 0x35);
		case 0x36: return _mm_cmpestri(a, la, b, lb, 0x36);
		case 0x37: return _mm_cmpestri(a, la, b, lb, 0x37);
		case 0x38: return _mm_cmpestri(a, la, b, lb, 0x38);
		case 0x39: return _mm_cmpestri(a, la, b, lb, 0x39);
		case 0x3A: return _mm_cmpestri(a, la, b, lb, 0x3A);
		case 0x3B: return _mm_cmpestri(a, la, b, lb, 0x3B);
		case 0x3C: return _mm_cmpestri(a, la, b, lb, 0x3C);
		case 0x3D: return _mm_cmpestri(a, la, b, lb, 0x3D);
		case 0x3E: return _mm_cmpestri(a, la, b, lb, 0x3E);
		case 0x3F: return _mm_cmpestri(a, la, b, lb, 0x3F);
		case 0x40: return _mm_cmpestri(a, la, b, lb, 0x40);
		case 0x41: return _mm_cmpestri(a, la, b, lb, 0x41);
		case 0x42: return _mm_cmpestri(a, la, b, lb, 0x42);
		case 0x43: return _mm_cmpestri(a, la, b, lb, 0x43);
		case 0x44: return _mm_cmpestri(a, la, b, lb, 0x44);
		case 0x45: return _mm_cmpestri(a, la, b, lb, 0x45);
		case 0x46: return _mm_cmpestri(a, la, b, lb, 0x46);
		case 0x47: return _mm_cmpestri(a, la, b, lb, 0x47);
		case 0x48: return _mm_cmpestri(a, la, b, lb, 0x48);
		case 0x49: return _mm_cmpestri(a, la, b, lb, 0x49);
		case 0x4A: return _mm_cmpestri(a, la, b, lb, 0x4A);
		case 0x4B: return _mm_cmpestri(a, la, b, lb, 0x4B);
		case 0x4C: return _mm_cmpestri(a, la, b, lb, 0x4C);
		case 0x4D: return _mm_cmpestri(a, la, b, lb, 0x4D);
		case 0x4E: return _mm_cmpestri(a, la, b, lb, 0x4E);
		case 0x4F: return _mm_cmpestri(a, la, b, lb, 0x4F);
		case 0x50: return _mm_cmpestri(a, la, b, lb, 0x50);
		case 0x51: return _mm_cmpestri(a, la, b, lb, 0x51);
		case 0x52: return _mm_cmpestri(a, la, b, lb, 0x52);
		case 0x53: return _mm_cmpestri(a, la, b, lb, 0x53);
		case 0x54: return _mm_cmpestri(a, la, b, lb, 0x54);
		case 0x55: return _mm_cmpestri(a, la, b, lb, 0x55);
		case 0x56: return _mm_cmpestri(a, la, b, lb, 0x56);
		case 0x57: return _mm_cmpestri(a, la, b, lb, 0x57);
		case 0x58: return _mm_cmpestri(a, la, b, lb, 0x58);
		case 0x59: return _mm_cmpestri(a, la, b, lb, 0x59);
		case 0x5A: return _mm_cmpestri(a, la, b, lb, 0x5A);
		case 0x5B: return _mm_cmpestri(a, la, b, lb, 0x5B);
		case 0x5C: return _mm_cmpestri(a, la, b, lb, 0x5C);
		case 0x5D: return _mm_cmpestri(a, la, b, lb, 0x5D);
		case 0x5E: return _mm_cmpestri(a, la, b, lb, 0x5E);
		case 0x5F: return _mm_cmpestri(a, la, b, lb, 0x5F);
		case 0x60: return _mm_cmpestri(a, la, b, lb, 0x60);
		case 0x61: return _mm_cmpestri(a, la, b, lb, 0x61);
		case 0x62: return _mm_cmpestri(a, la, b, lb, 0x62);
		case 0x63: return _mm_cmpestri(a, la, b, lb, 0x63);
		case 0x64: return _mm_cmpestri(a, la, b, lb, 0x64);
		case 0x65: return _mm_cmpestri(a, la, b, lb, 0x65);
		case 0x66: return _mm_cmpestri(a, la, b, lb, 0x66);
		case 0x67: return _mm_cmpestri(a, la, b, lb, 0x67);
		case 0x68: return _mm_cmpestri(a, la, b, lb, 0x68);
		case 0x69: return _mm_cmpestri(a, la, b, lb, 0x69);
		case 0x6A: return _mm_cmpestri(a, la, b, lb, 0x6A);
		case 0x6B: return _mm_cmpestri(a, la, b, lb, 0x6B);
		case 0x6C: return _mm_cmpestri(a, la, b, lb, 0x6C);
		case 0x6D: return _mm_cmpestri(a, la, b, lb, 0x6D);
		case 0x6E: return _mm_cmpestri(a, la, b, lb, 0x6E);
		case 0x6F: return _mm_cmpestri(a, la, b, lb, 0x6F);
		case 0x70: return _mm_cmpestri(a, la, b, lb, 0x70);
		case 0x71: return _mm_cmpestri(a, la, b, lb, 0x71);
		case 0x72: return _mm_cmpestri(a, la, b, lb, 0x72);
		case 0x73: return _mm_cmpestri(a, la, b, lb, 0x73);
		case 0x74: return _mm_cmpestri(a, la, b, lb, 0x74);
		case 0x75: return _mm_cmpestri(a, la, b, lb, 0x75);
		case 0x76: return _mm_cmpestri(a, la, b, lb, 0x76);
		case 0x77: return _mm_cmpestri(a, la, b, lb, 0x77);
		case 0x78: return _mm_cmpestri(a, la, b, lb, 0x78);
		case 0x79: return _mm_cmpestri(a, la, b, lb, 0x79);
		case 0x7A: return _mm_cmpestri(a, la, b, lb, 0x7A);
		case 0x7B: return _mm_cmpestri(a, la, b, lb, 0x7B);
		case 0x7C: return _mm_cmpestri(a, la, b, lb, 0x7C);
		case 0x7D: return _mm_cmpestri(a, la, b, lb, 0x7D);
		case 0x7E: return _mm_cmpestri(a, la, b, lb, 0x7E);
		default:   return _mm_cmpestri(a, la, b, lb, 0x7F);
	}
}

__m128i sse4_2_cmpestrm(__m128i a, int la, __m128i b, int lb, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpestrm(a, la, b, lb, 0x00);
		case 0x01: return _mm_cmpestrm(a, la, b, lb, 0x01);
		case 0x02: return _mm_cmpestrm(a, la, b, lb, 0x02);
		case 0x03: return _mm_cmpestrm(a, la, b, lb, 0x03);
		case 0x04: return _mm_cmpestrm(a, la, b, lb, 0x04);
		case 0x05: return _mm_cmpestrm(a, la, b, lb, 0x05);
		case 0x06: return _mm_cmpestrm(a, la, b, lb, 0x06);
		case 0x07: return _mm_cmpestrm(a, la, b, lb, 0x07);
		case 0x08: return _mm_cmpestrm(a, la, b, lb, 0x08);
		case 0x09: return _mm_cmpestrm(a, la, b, lb, 0x09);
		case 0x0A: return _mm_cmpestrm(a, la, b, lb, 0x0A);
		case 0x0B: return _mm_cmpestrm(a, la, b, lb, 0x0B);
		case 0x0C: return _mm_cmpestrm(a, la, b, lb, 0x0C);
		case 0x0D: return _mm_cmpestrm(a, la, b, lb, 0x0D);
		case 0x0E: return _mm_cmpestrm(a, la, b, lb, 0x0E);
		case 0x0F: return _mm_cmpestrm(a, la, b, lb, 0x0F);
		case 0x10: return _mm_cmpestrm(a, la, b, lb, 0x10);
		case 0x11: return _mm_cmpestrm(a, la, b, lb, 0x11);
		case 0x12: return _mm_cmpestrm(a, la, b, lb, 0x12);
		case 0x13: return _mm_cmpestrm(a, la, b, lb, 0x13);
		case 0x14: return _mm_cmpestrm(a, la, b, lb, 0x14);
		case 0x15: return _mm_cmpestrm(a, la, b, lb, 0x15);
		case 0x16: return _mm_cmpestrm(a, la, b, lb, 0x16);
		case 0x17: return _mm_cmpestrm(a, la, b, lb, 0x17);
		case 0x18: return _mm_cmpestrm(a, la, b, lb, 0x18);
		case 0x19: return _mm_cmpestrm(a, la, b, lb, 0x19);
		case 0x1A: return _mm_cmpestrm(a, la, b, lb, 0x1A);
		case 0x1B: return _mm_cmpestrm(a, la, b, lb, 0x1B);
		case 0x1C: return _mm_cmpestrm(a, la, b, lb, 0x1C);
		case 0x1D: return _mm_cmpestrm(a, la, b, lb, 0x1D);
		case 0x1E: return _mm_cmpestrm(a, la, b, lb, 0x1E);
		case 0x1F: return _mm_cmpestrm(a, la, b, lb, 0x1F);
		case 0x20: return _mm_cmpestrm(a, la, b, lb, 0x20);
		case 0x21: return _mm_cmpestrm(a, la, b, lb, 0x21);
		case 0x22: return _mm_cmpestrm(a, la, b, lb, 0x22);
		case 0x23: return _mm_cmpestrm(a, la, b, lb, 0x23);
		case 0x24: return _mm_cmpestrm(a, la, b, lb, 0x24);
		case 0x25: return _mm_cmpestrm(a, la, b, lb, 0x25);
		case 0x26: return _mm_cmpestrm(a, la, b, lb, 0x26);
		case 0x27: return _mm_cmpestrm(a, la, b, lb, 0x27);
		case 0x28: return _mm_cmpestrm(a, la, b, lb, 0x28);
		case 0x29: return _mm_cmpestrm(a, la, b, lb, 0x29);
		case 0x2A: return _mm_cmpestrm(a, la, b, lb, 0x2A);
		case 0x2B: return _mm_cmpestrm(a, la, b, lb, 0x2B);
		case 0x2C: return _mm_cmpestrm(a, la, b, lb, 0x2C);
		case 0x2D: return _mm_cmpestrm(a, la, b, lb, 0x2D);
		case 0x2E: return _mm_cmpestrm(a, la, b, lb, 0x2E);
		case 0x2F: return _mm_cmpestrm(a, la, b, lb, 0x2F);
		case 0x30: return _mm_cmpestrm(a, la, b, lb, 0x30);
		case 0x31: return _mm_cmpestrm(a, la, b, lb, 0x31);
		case 0x32: return _mm_cmpestrm(a, la, b, lb, 0x32);
		case 0x33: return _mm_cmpestrm(a, la, b, lb, 0x33);
		case 0x34: return _mm_cmpestrm(a, la, b, lb, 0x34);
		case 0x35: return _mm_cmpestrm(a, la, b, lb, 0x35);
		case 0x36: return _mm_cmpestrm(a, la, b, lb, 0x36);
		case 0x37: return _mm_cmpestrm(a, la, b, lb, 0x37);
		case 0x38: return _mm_cmpestrm(a, la, b, lb, 0x38);
		case 0x39: return _mm_cmpestrm(a, la, b, lb, 0x39);
		case 0x3A: return _mm_cmpestrm(a, la, b, lb, 0x3A);
		case 0x3B: return _mm_cmpestrm(a, la, b, lb, 0x3B);
		case 0x3C: return _mm_cmpestrm(a, la, b, lb, 0x3C);
		case 0x3D: return _mm_cmpestrm(a, la, b, lb, 0x3D);
		case 0x3E: return _mm_cmpestrm(a, la, b, lb, 0x3E);
		case 0x3F: return _mm_cmpestrm(a, la, b, lb, 0x3F);
		case 0x40: return _mm_cmpestrm(a, la, b, lb, 0x40);
		case 0x41: return _mm_cmpestrm(a, la, b, lb, 0x41);
		case 0x42: return _mm_cmpestrm(a, la, b, lb, 0x42);
		case 0x43: return _mm_cmpestrm(a, la, b, lb, 0x43);
		case 0x44: return _mm_cmpestrm(a, la, b, lb, 0x44);
		case 0x45: return _mm_cmpestrm(a, la, b, lb, 0x45);
		case 0x46: return _mm_cmpestrm(a, la, b, lb, 0x46);
		case 0x47: return _mm_cmpestrm(a, la, b, lb, 0x47);
		case 0x48: return _mm_cmpestrm(a, la, b, lb, 0x48);
		case 0x49: return _mm_cmpestrm(a, la, b, lb, 0x49);
		case 0x4A: return _mm_cmpestrm(a, la, b, lb, 0x4A);
		case 0x4B: return _mm_cmpestrm(a, la, b, lb, 0x4B);
		case 0x4C: return _mm_cmpestrm(a, la, b, lb, 0x4C);
		case 0x4D: return _mm_cmpestrm(a, la, b, lb, 0x4D);
		case 0x4E: return _mm_cmpestrm(a, la, b, lb, 0x4E);
		case 0x4F: return _mm_cmpestrm(a, la, b, lb, 0x4F);
		case 0x50: return _mm_cmpestrm(a, la, b, lb, 0x50);
		case 0x51: return _mm_cmpestrm(a, la, b, lb, 0x51);
		case 0x52: return _mm_cmpestrm(a, la, b, lb, 0x52);
		case 0x53: return _mm_cmpestrm(a, la, b, lb, 0x53);
		case 0x54: return _mm_cmpestrm(a, la, b, lb, 0x54);
		case 0x55: return _mm_cmpestrm(a, la, b, lb, 0x55);
		case 0x56: return _mm_cmpestrm(a, la, b, lb, 0x56);
		case 0x57: return _mm_cmpestrm(a, la, b, lb, 0x57);
		case 0x58: return _mm_cmpestrm(a, la, b, lb, 0x58);
		case 0x59: return _mm_cmpestrm(a, la, b, lb, 0x59);
		case 0x5A: return _mm_cmpestrm(a, la, b, lb, 0x5A);
		case 0x5B: return _mm_cmpestrm(a, la, b, lb, 0x5B);
		case 0x5C: return _mm_cmpestrm(a, la, b, lb, 0x5C);
		case 0x5D: return _mm_cmpestrm(a, la, b, lb, 0x5D);
		case 0x5E: return _mm_cmpestrm(a, la, b, lb, 0x5E);
		case 0x5F: return _mm_cmpestrm(a, la, b, lb, 0x5F);
		case 0x60: return _mm_cmpestrm(a, la, b, lb, 0x60);
		case 0x61: return _mm_cmpestrm(a, la, b, lb, 0x61);
		case 0x62: return _mm_cmpestrm(a, la, b, lb, 0x62);
		case 0x63: return _mm_cmpestrm(a, la, b, lb, 0x63);
		case 0x64: return _mm_cmpestrm(a, la, b, lb, 0x64);
		case 0x65: return _mm_cmpestrm(a, la, b, lb, 0x65);
		case 0x66: return _mm_cmpestrm(a, la, b, lb, 0x66);
		case 0x67: return _mm_cmpestrm(a, la, b, lb, 0x67);
		case 0x68: return _mm_cmpestrm(a, la, b, lb, 0x68);
		case 0x69: return _mm_cmpestrm(a, la, b, lb, 0x69);
		case 0x6A: return _mm_cmpestrm(a, la, b, lb, 0x6A);
		case 0x6B: return _mm_cmpestrm(a, la, b, lb, 0x6B);
		case 0x6C: return _mm_cmpestrm(a, la, b, lb, 0x6C);
		case 0x6D: return _mm_cmpestrm(a, la, b, lb, 0x6D);
		case 0x6E: return _mm_cmpestrm(a, la, b, lb, 0x6E);
		case 0x6F: return _mm_cmpestrm(a, la, b, lb, 0x6F);
		case 0x70: return _mm_cmpestrm(a, la, b, lb, 0x70);
		case 0x71: return _mm_cmpestrm(a, la, b, lb, 0x71);
		case 0x72: return _mm_cmpestrm(a, la, b, lb, 0x72);
		case 0x73: return _mm_cmpestrm(a, la, b, lb, 0x73);
		case 0x74: return _mm_cmpestrm(a, la, b, lb, 0x74);
		case 0x75: return _mm_cmpestrm(a, la, b, lb, 0x75);
		case 0x76: return _mm_cmpestrm(a, la, b, lb, 0x76);
		case 0x77: return _mm_cmpestrm(a, la, b, lb, 0x77);
		case 0x78: return _mm_cmpestrm(a, la, b, lb, 0x78);
		case 0x79: return _mm_cmpestrm(a, la, b, lb, 0x79);
		case 0x7A: return _mm_cmpestrm(a, la, b, lb, 0x7A);
		case 0x7B: return _mm_cmpestrm(a, la, b, lb, 0x7B);
		case 0x7C: return _mm_cmpestrm(a, la, b, lb, 0x7C);
		case 0x7D: return _mm_cmpestrm(a, la, b, lb, 0x7D);
		case 0x7E: return _mm_cmpestrm(a, la, b, lb, 0x7E);
		default:   return _mm_cmpestrm(a, la, b, lb, 0x7F);
	}
}

int sse4_2_cmpestro(__m128i a, int la, __m128i b, int lb, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpestro(a, la, b, lb, 0x00);
		case 0x01: return _mm_cmpestro(a, la, b, lb, 0x01);
		case 0x02: return _mm_cmpestro(a, la, b, lb, 0x02);
		case 0x03: return _mm_cmpestro(a, la, b, lb, 0x03);
		case 0x04: return _mm_cmpestro(a, la, b, lb, 0x04);
		case 0x05: return _mm_cmpestro(a, la, b, lb, 0x05);
		case 0x06: return _mm_cmpestro(a, la, b, lb, 0x06);
		case 0x07: return _mm_cmpestro(a, la, b, lb, 0x07);
		case 0x08: return _mm_cmpestro(a, la, b, lb, 0x08);
		case 0x09: return _mm_cmpestro(a, la, b, lb, 0x09);
		case 0x0A: return _mm_cmpestro(a, la, b, lb, 0x0A);
		case 0x0B: return _mm_cmpestro(a, la, b, lb, 0x0B);
		case 0x0C: return _mm_cmpestro(a, la, b, lb, 0x0C);
		case 0x0D: return _mm_cmpestro(a, la, b, lb, 0x0D);
		case 0x0E: return _mm_cmpestro(a, la, b, lb, 0x0E);
		case 0x0F: return _mm_cmpestro(a, la, b, lb, 0x0F);
		case 0x10: return _mm_cmpestro(a, la, b, lb, 0x10);
		case 0x11: return _mm_cmpestro(a, la, b, lb, 0x11);
		case 0x12: return _mm_cmpestro(a, la, b, lb, 0x12);
		case 0x13: return _mm_cmpestro(a, la, b, lb, 0x13);
		case 0x14: return _mm_cmpestro(a, la, b, lb, 0x14);
		case 0x15: return _mm_cmpestro(a, la, b, lb, 0x15);
		case 0x16: return _mm_cmpestro(a, la, b, lb, 0x16);
		case 0x17: return _mm_cmpestro(a, la, b, lb, 0x17);
		case 0x18: return _mm_cmpestro(a, la, b, lb, 0x18);
		case 0x19: return _mm_cmpestro(a, la, b, lb, 0x19);
		case 0x1A: return _mm_cmpestro(a, la, b, lb, 0x1A);
		case 0x1B: return _mm_cmpestro(a, la, b, lb, 0x1B);
		case 0x1C: return _mm_cmpestro(a, la, b, lb, 0x1C);
		case 0x1D: return _mm_cmpestro(a, la, b, lb, 0x1D);
		case 0x1E: return _mm_cmpestro(a, la, b, lb, 0x1E);
		case 0x1F: return _mm_cmpestro(a, la, b, lb, 0x1F);
		case 0x20: return _mm_cmpestro(a, la, b, lb, 0x20);
		case 0x21: return _mm_cmpestro(a, la, b, lb, 0x21);
		case 0x22: return _mm_cmpestro(a, la, b, lb, 0x22);
		case 0x23: return _mm_cmpestro(a, la, b, lb, 0x23);
		case 0x24: return _mm_cmpestro(a, la, b, lb, 0x24);
		case 0x25: return _mm_cmpestro(a, la, b, lb, 0x25);
		case 0x26: return _mm_cmpestro(a, la, b, lb, 0x26);
		case 0x27: return _mm_cmpestro(a, la, b, lb, 0x27);
		case 0x28: return _mm_cmpestro(a, la, b, lb, 0x28);
		case 0x29: return _mm_cmpestro(a, la, b, lb, 0x29);
		case 0x2A: return _mm_cmpestro(a, la, b, lb, 0x2A);
		case 0x2B: return _mm_cmpestro(a, la, b, lb, 0x2B);
		case 0x2C: return _mm_cmpestro(a, la, b, lb, 0x2C);
		case 0x2D: return _mm_cmpestro(a, la, b, lb, 0x2D);
		case 0x2E: return _mm_cmpestro(a, la, b, lb, 0x2E);
		case 0x2F: return _mm_cmpestro(a, la, b, lb, 0x2F);
		case 0x30: return _mm_cmpestro(a, la, b, lb, 0x30);
		case 0x31: return _mm_cmpestro(a, la, b, lb, 0x31);
		case 0x32: return _mm_cmpestro(a, la, b, lb, 0x32);
		case 0x33: return _mm_cmpestro(a, la, b, lb, 0x33);
		case 0x34: return _mm_cmpestro(a, la, b, lb, 0x34);
		case 0x35: return _mm_cmpestro(a, la, b, lb, 0x35);
		case 0x36: return _mm_cmpestro(a, la, b, lb, 0x36);
		case 0x37: return _mm_cmpestro(a, la, b, lb, 0x37);
		case 0x38: return _mm_cmpestro(a, la, b, lb, 0x38);
		case 0x39: return _mm_cmpestro(a, la, b, lb, 0x39);
		case 0x3A: return _mm_cmpestro(a, la, b, lb, 0x3A);
		case 0x3B: return _mm_cmpestro(a, la, b, lb, 0x3B);
		case 0x3C: return _mm_cmpestro(a, la, b, lb, 0x3C);
		case 0x3D: return _mm_cmpestro(a, la, b, lb, 0x3D);
		case 0x3E: return _mm_cmpestro(a, la, b, lb, 0x3E);
		case 0x3F: return _mm_cmpestro(a, la, b, lb, 0x3F);
		case 0x40: return _mm_cmpestro(a, la, b, lb, 0x40);
		case 0x41: return _mm_cmpestro(a, la, b, lb, 0x41);
		case 0x42: return _mm_cmpestro(a, la, b, lb, 0x42);
		case 0x43: return _mm_cmpestro(a, la, b, lb, 0x43);
		case 0x44: return _mm_cmpestro(a, la, b, lb, 0x44);
		case 0x45: return _mm_cmpestro(a, la, b, lb, 0x45);
		case 0x46: return _mm_cmpestro(a, la, b, lb, 0x46);
		case 0x47: return _mm_cmpestro(a, la, b, lb, 0x47);
		case 0x48: return _mm_cmpestro(a, la, b, lb, 0x48);
		case 0x49: return _mm_cmpestro(a, la, b, lb, 0x49);
		case 0x4A: return _mm_cmpestro(a, la, b, lb, 0x4A);
		case 0x4B: return _mm_cmpestro(a, la, b, lb, 0x4B);
		case 0x4C: return _mm_cmpestro(a, la, b, lb, 0x4C);
		case 0x4D: return _mm_cmpestro(a, la, b, lb, 0x4D);
		case 0x4E: return _mm_cmpestro(a, la, b, lb, 0x4E);
		case 0x4F: return _mm_cmpestro(a, la, b, lb, 0x4F);
		case 0x50: return _mm_cmpestro(a, la, b, lb, 0x50);
		case 0x51: return _mm_cmpestro(a, la, b, lb, 0x51);
		case 0x52: return _mm_cmpestro(a, la, b, lb, 0x52);
		case 0x53: return _mm_cmpestro(a, la, b, lb, 0x53);
		case 0x54: return _mm_cmpestro(a, la, b, lb, 0x54);
		case 0x55: return _mm_cmpestro(a, la, b, lb, 0x55);
		case 0x56: return _mm_cmpestro(a, la, b, lb, 0x56);
		case 0x57: return _mm_cmpestro(a, la, b, lb, 0x57);
		case 0x58: return _mm_cmpestro(a, la, b, lb, 0x58);
		case 0x59: return _mm_cmpestro(a, la, b, lb, 0x59);
		case 0x5A: return _mm_cmpestro(a, la, b, lb, 0x5A);
		case 0x5B: return _mm_cmpestro(a, la, b, lb, 0x5B);
		case 0x5C: return _mm_cmpestro(a, la, b, lb, 0x5C);
		case 0x5D: return _mm_cmpestro(a, la, b, lb, 0x5D);
		case 0x5E: return _mm_cmpestro(a, la, b, lb, 0x5E);
		case 0x5F: return _mm_cmpestro(a, la, b, lb, 0x5F);
		case 0x60: return _mm_cmpestro(a, la, b, lb, 0x60);
		case 0x61: return _mm_cmpestro(a, la, b, lb, 0x61);
		case 0x62: return _mm_cmpestro(a, la, b, lb, 0x62);
		case 0x63: return _mm_cmpestro(a, la, b, lb, 0x63);
		case 0x64: return _mm_cmpestro(a, la, b, lb, 0x64);
		case 0x65: return _mm_cmpestro(a, la, b, lb, 0x65);
		case 0x66: return _mm_cmpestro(a, la, b, lb, 0x66);
		case 0x67: return _mm_cmpestro(a, la, b, lb, 0x67);
		case 0x68: return _mm_cmpestro(a, la, b, lb, 0x68);
		case 0x69: return _mm_cmpestro(a, la, b, lb, 0x69);
		case 0x6A: return _mm_cmpestro(a, la, b, lb, 0x6A);
		case 0x6B: return _mm_cmpestro(a, la, b, lb, 0x6B);
		case 0x6C: return _mm_cmpestro(a, la, b, lb, 0x6C);
		case 0x6D: return _mm_cmpestro(a, la, b, lb, 0x6D);
		case 0x6E: return _mm_cmpestro(a, la, b, lb, 0x6E);
		case 0x6F: return _mm_cmpestro(a, la, b, lb, 0x6F);
		case 0x70: return _mm_cmpestro(a, la, b, lb, 0x70);
		case 0x71: return _mm_cmpestro(a, la, b, lb, 0x71);
		case 0x72: return _mm_cmpestro(a, la, b, lb, 0x72);
		case 0x73: return _mm_cmpestro(a, la, b, lb, 0x73);
		case 0x74: return _mm_cmpestro(a, la, b, lb, 0x74);
		case 0x75: return _mm_cmpestro(a, la, b, lb, 0x75);
		case 0x76: return _mm_cmpestro(a, la, b, lb, 0x76);
		case 0x77: return _mm_cmpestro(a, la, b, lb, 0x77);
		case 0x78: return _mm_cmpestro(a, la, b, lb, 0x78);
		case 0x79: return _mm_cmpestro(a, la, b, lb, 0x79);
		case 0x7A: return _mm_cmpestro(a, la, b, lb, 0x7A);
		case 0x7B: return _mm_cmpestro(a, la, b, lb, 0x7B);
		case 0x7C: return _mm_cmpestro(a, la, b, lb, 0x7C);
		case 0x7D: return _mm_cmpestro(a, la, b, lb, 0x7D);
		case 0x7E: return _mm_cmpestro(a, la, b, lb, 0x7E);
		default:   return _mm_cmpestro(a, la, b, lb, 0x7F);
	}
}

int sse4_2_cmpestrs(__m128i a, int la, __m128i b, int lb, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpestrs(a, la, b, lb, 0x00);
		case 0x01: return _mm_cmpestrs(a, la, b, lb, 0x01);
		case 0x02: return _mm_cmpestrs(a, la, b, lb, 0x02);
		case 0x03: return _mm_cmpestrs(a, la, b, lb, 0x03);
		case 0x04: return _mm_cmpestrs(a, la, b, lb, 0x04);
		case 0x05: return _mm_cmpestrs(a, la, b, lb, 0x05);
		case 0x06: return _mm_cmpestrs(a, la, b, lb, 0x06);
		case 0x07: return _mm_cmpestrs(a, la, b, lb, 0x07);
		case 0x08: return _mm_cmpestrs(a, la, b, lb, 0x08);
		case 0x09: return _mm_cmpestrs(a, la, b, lb, 0x09);
		case 0x0A: return _mm_cmpestrs(a, la, b, lb, 0x0A);
		case 0x0B: return _mm_cmpestrs(a, la, b, lb, 0x0B);
		case 0x0C: return _mm_cmpestrs(a, la, b, lb, 0x0C);
		case 0x0D: return _mm_cmpestrs(a, la, b, lb, 0x0D);
		case 0x0E: return _mm_cmpestrs(a, la, b, lb, 0x0E);
		case 0x0F: return _mm_cmpestrs(a, la, b, lb, 0x0F);
		case 0x10: return _mm_cmpestrs(a, la, b, lb, 0x10);
		case 0x11: return _mm_cmpestrs(a, la, b, lb, 0x11);
		case 0x12: return _mm_cmpestrs(a, la, b, lb, 0x12);
		case 0x13: return _mm_cmpestrs(a, la, b, lb, 0x13);
		case 0x14: return _mm_cmpestrs(a, la, b, lb, 0x14);
		case 0x15: return _mm_cmpestrs(a, la, b, lb, 0x15);
		case 0x16: return _mm_cmpestrs(a, la, b, lb, 0x16);
		case 0x17: return _mm_cmpestrs(a, la, b, lb, 0x17);
		case 0x18: return _mm_cmpestrs(a, la, b, lb, 0x18);
		case 0x19: return _mm_cmpestrs(a, la, b, lb, 0x19);
		case 0x1A: return _mm_cmpestrs(a, la, b, lb, 0x1A);
		case 0x1B: return _mm_cmpestrs(a, la, b, lb, 0x1B);
		case 0x1C: return _mm_cmpestrs(a, la, b, lb, 0x1C);
		case 0x1D: return _mm_cmpestrs(a, la, b, lb, 0x1D);
		case 0x1E: return _mm_cmpestrs(a, la, b, lb, 0x1E);
		case 0x1F: return _mm_cmpestrs(a, la, b, lb, 0x1F);
		case 0x20: return _mm_cmpestrs(a, la, b, lb, 0x20);
		case 0x21: return _mm_cmpestrs(a, la, b, lb, 0x21);
		case 0x22: return _mm_cmpestrs(a, la, b, lb, 0x22);
		case 0x23: return _mm_cmpestrs(a, la, b, lb, 0x23);
		case 0x24: return _mm_cmpestrs(a, la, b, lb, 0x24);
		case 0x25: return _mm_cmpestrs(a, la, b, lb, 0x25);
		case 0x26: return _mm_cmpestrs(a, la, b, lb, 0x26);
		case 0x27: return _mm_cmpestrs(a, la, b, lb, 0x27);
		case 0x28: return _mm_cmpestrs(a, la, b, lb, 0x28);
		case 0x29: return _mm_cmpestrs(a, la, b, lb, 0x29);
		case 0x2A: return _mm_cmpestrs(a, la, b, lb, 0x2A);
		case 0x2B: return _mm_cmpestrs(a, la, b, lb, 0x2B);
		case 0x2C: return _mm_cmpestrs(a, la, b, lb, 0x2C);
		case 0x2D: return _mm_cmpestrs(a, la, b, lb, 0x2D);
		case 0x2E: return _mm_cmpestrs(a, la, b, lb, 0x2E);
		case 0x2F: return _mm_cmpestrs(a, la, b, lb, 0x2F);
		case 0x30: return _mm_cmpestrs(a, la, b, lb, 0x30);
		case 0x31: return _mm_cmpestrs(a, la, b, lb, 0x31);
		case 0x32: return _mm_cmpestrs(a, la, b, lb, 0x32);
		case 0x33: return _mm_cmpestrs(a, la, b, lb, 0x33);
		case 0x34: return _mm_cmpestrs(a, la, b, lb, 0x34);
		case 0x35: return _mm_cmpestrs(a, la, b, lb, 0x35);
		case 0x36: return _mm_cmpestrs(a, la, b, lb, 0x36);
		case 0x37: return _mm_cmpestrs(a, la, b, lb, 0x37);
		case 0x38: return _mm_cmpestrs(a, la, b, lb, 0x38);
		case 0x39: return _mm_cmpestrs(a, la, b, lb, 0x39);
		case 0x3A: return _mm_cmpestrs(a, la, b, lb, 0x3A);
		case 0x3B: return _mm_cmpestrs(a, la, b, lb, 0x3B);
		case 0x3C: return _mm_cmpestrs(a, la, b, lb, 0x3C);
		case 0x3D: return _mm_cmpestrs(a, la, b, lb, 0x3D);
		case 0x3E: return _mm_cmpestrs(a, la, b, lb, 0x3E);
		case 0x3F: return _mm_cmpestrs(a, la, b, lb, 0x3F);
		case 0x40: return _mm_cmpestrs(a, la, b, lb, 0x40);
		case 0x41: return _mm_cmpestrs(a, la, b, lb, 0x41);
		case 0x42: return _mm_cmpestrs(a, la, b, lb, 0x42);
		case 0x43: return _mm_cmpestrs(a, la, b, lb, 0x43);
		case 0x44: return _mm_cmpestrs(a, la, b, lb, 0x44);
		case 0x45: return _mm_cmpestrs(a, la, b, lb, 0x45);
		case 0x46: return _mm_cmpestrs(a, la, b, lb, 0x46);
		case 0x47: return _mm_cmpestrs(a, la, b, lb, 0x47);
		case 0x48: return _mm_cmpestrs(a, la, b, lb, 0x48);
		case 0x49: return _mm_cmpestrs(a, la, b, lb, 0x49);
		case 0x4A: return _mm_cmpestrs(a, la, b, lb, 0x4A);
		case 0x4B: return _mm_cmpestrs(a, la, b, lb, 0x4B);
		case 0x4C: return _mm_cmpestrs(a, la, b, lb, 0x4C);
		case 0x4D: return _mm_cmpestrs(a, la, b, lb, 0x4D);
		case 0x4E: return _mm_cmpestrs(a, la, b, lb, 0x4E);
		case 0x4F: return _mm_cmpestrs(a, la, b, lb, 0x4F);
		case 0x50: return _mm_cmpestrs(a, la, b, lb, 0x50);
		case 0x51: return _mm_cmpestrs(a, la, b, lb, 0x51);
		case 0x52: return _mm_cmpestrs(a, la, b, lb, 0x52);
		case 0x53: return _mm_cmpestrs(a, la, b, lb, 0x53);
		case 0x54: return _mm_cmpestrs(a, la, b, lb, 0x54);
		case 0x55: return _mm_cmpestrs(a, la, b, lb, 0x55);
		case 0x56: return _mm_cmpestrs(a, la, b, lb, 0x56);
		case 0x57: return _mm_cmpestrs(a, la, b, lb, 0x57);
		case 0x58: return _mm_cmpestrs(a, la, b, lb, 0x58);
		case 0x59: return _mm_cmpestrs(a, la, b, lb, 0x59);
		case 0x5A: return _mm_cmpestrs(a, la, b, lb, 0x5A);
		case 0x5B: return _mm_cmpestrs(a, la, b, lb, 0x5B);
		case 0x5C: return _mm_cmpestrs(a, la, b, lb, 0x5C);
		case 0x5D: return _mm_cmpestrs(a, la, b, lb, 0x5D);
		case 0x5E: return _mm_cmpestrs(a, la, b, lb, 0x5E);
		case 0x5F: return _mm_cmpestrs(a, la, b, lb, 0x5F);
		case 0x60: return _mm_cmpestrs(a, la, b, lb, 0x60);
		case 0x61: return _mm_cmpestrs(a, la, b, lb, 0x61);
		case 0x62: return _mm_cmpestrs(a, la, b, lb, 0x62);
		case 0x63: return _mm_cmpestrs(a, la, b, lb, 0x63);
		case 0x64: return _mm_cmpestrs(a, la, b, lb, 0x64);
		case 0x65: return _mm_cmpestrs(a, la, b, lb, 0x65);
		case 0x66: return _mm_cmpestrs(a, la, b, lb, 0x66);
		case 0x67: return _mm_cmpestrs(a, la, b, lb, 0x67);
		case 0x68: return _mm_cmpestrs(a, la, b, lb, 0x68);
		case 0x69: return _mm_cmpestrs(a, la, b, lb, 0x69);
		case 0x6A: return _mm_cmpestrs(a, la, b, lb, 0x6A);
		case 0x6B: return _mm_cmpestrs(a, la, b, lb, 0x6B);
		case 0x6C: return _mm_cmpestrs(a, la, b, lb, 0x6C);
		case 0x6D: return _mm_cmpestrs(a, la, b, lb, 0x6D);
		case 0x6E: return _mm_cmpestrs(a, la, b, lb, 0x6E);
		case 0x6F: return _mm_cmpestrs(a, la, b, lb, 0x6F);
		case 0x70: return _mm_cmpestrs(a, la, b, lb, 0x70);
		case 0x71: return _mm_cmpestrs(a, la, b, lb, 0x71);
		case 0x72: return _mm_cmpestrs(a, la, b, lb, 0x72);
		case 0x73: return _mm_cmpestrs(a, la, b, lb, 0x73);
		case 0x74: return _mm_cmpestrs(a, la, b, lb, 0x74);
		case 0x75: return _mm_cmpestrs(a, la, b, lb, 0x75);
		case 0x76: return _mm_cmpestrs(a, la, b, lb, 0x76);
		case 0x77: return _mm_cmpestrs(a, la, b, lb, 0x77);
		case 0x78: return _mm_cmpestrs(a, la, b, lb, 0x78);
		case 0x79: return _mm_cmpestrs(a, la, b, lb, 0x79);
		case 0x7A: return _mm_cmpestrs(a, la, b, lb, 0x7A);
		case 0x7B: return _mm_cmpestrs(a, la, b, lb, 0x7B);
		case 0x7C: return _mm_cmpestrs(a, la, b, lb, 0x7C);
		case 0x7D: return _mm_cmpestrs(a, la, b, lb, 0x7D);
		case 0x7E: return _mm_cmpestrs(a, la, b, lb, 0x7E);
		default:   return _mm_cmpestrs(a, la, b, lb, 0x7F);
	}
}

int sse4_2_cmpestrz(__m128i a, int la, __m128i b, int lb, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpestrz(a, la, b, lb, 0x00);
		case 0x01: return _mm_cmpestrz(a, la, b, lb, 0x01);
		case 0x02: return _mm_cmpestrz(a, la, b, lb, 0x02);
		case 0x03: return _mm_cmpestrz(a, la, b, lb, 0x03);
		case 0x04: return _mm_cmpestrz(a, la, b, lb, 0x04);
		case 0x05: return _mm_cmpestrz(a, la, b, lb, 0x05);
		case 0x06: return _mm_cmpestrz(a, la, b, lb, 0x06);
		case 0x07: return _mm_cmpestrz(a, la, b, lb, 0x07);
		case 0x08: return _mm_cmpestrz(a, la, b, lb, 0x08);
		case 0x09: return _mm_cmpestrz(a, la, b, lb, 0x09);
		case 0x0A: return _mm_cmpestrz(a, la, b, lb, 0x0A);
		case 0x0B: return _mm_cmpestrz(a, la, b, lb, 0x0B);
		case 0x0C: return _mm_cmpestrz(a, la, b, lb, 0x0C);
		case 0x0D: return _mm_cmpestrz(a, la, b, lb, 0x0D);
		case 0x0E: return _mm_cmpestrz(a, la, b, lb, 0x0E);
		case 0x0F: return _mm_cmpestrz(a, la, b, lb, 0x0F);
		case 0x10: return _mm_cmpestrz(a, la, b, lb, 0x10);
		case 0x11: return _mm_cmpestrz(a, la, b, lb, 0x11);
		case 0x12: return _mm_cmpestrz(a, la, b, lb, 0x12);
		case 0x13: return _mm_cmpestrz(a, la, b, lb, 0x13);
		case 0x14: return _mm_cmpestrz(a, la, b, lb, 0x14);
		case 0x15: return _mm_cmpestrz(a, la, b, lb, 0x15);
		case 0x16: return _mm_cmpestrz(a, la, b, lb, 0x16);
		case 0x17: return _mm_cmpestrz(a, la, b, lb, 0x17);
		case 0x18: return _mm_cmpestrz(a, la, b, lb, 0x18);
		case 0x19: return _mm_cmpestrz(a, la, b, lb, 0x19);
		case 0x1A: return _mm_cmpestrz(a, la, b, lb, 0x1A);
		case 0x1B: return _mm_cmpestrz(a, la, b, lb, 0x1B);
		case 0x1C: return _mm_cmpestrz(a, la, b, lb, 0x1C);
		case 0x1D: return _mm_cmpestrz(a, la, b, lb, 0x1D);
		case 0x1E: return _mm_cmpestrz(a, la, b, lb, 0x1E);
		case 0x1F: return _mm_cmpestrz(a, la, b, lb, 0x1F);
		case 0x20: return _mm_cmpestrz(a, la, b, lb, 0x20);
		case 0x21: return _mm_cmpestrz(a, la, b, lb, 0x21);
		case 0x22: return _mm_cmpestrz(a, la, b, lb, 0x22);
		case 0x23: return _mm_cmpestrz(a, la, b, lb, 0x23);
		case 0x24: return _mm_cmpestrz(a, la, b, lb, 0x24);
		case 0x25: return _mm_cmpestrz(a, la, b, lb, 0x25);
		case 0x26: return _mm_cmpestrz(a, la, b, lb, 0x26);
		case 0x27: return _mm_cmpestrz(a, la, b, lb, 0x27);
		case 0x28: return _mm_cmpestrz(a, la, b, lb, 0x28);
		case 0x29: return _mm_cmpestrz(a, la, b, lb, 0x29);
		case 0x2A: return _mm_cmpestrz(a, la, b, lb, 0x2A);
		case 0x2B: return _mm_cmpestrz(a, la, b, lb, 0x2B);
		case 0x2C: return _mm_cmpestrz(a, la, b, lb, 0x2C);
		case 0x2D: return _mm_cmpestrz(a, la, b, lb, 0x2D);
		case 0x2E: return _mm_cmpestrz(a, la, b, lb, 0x2E);
		case 0x2F: return _mm_cmpestrz(a, la, b, lb, 0x2F);
		case 0x30: return _mm_cmpestrz(a, la, b, lb, 0x30);
		case 0x31: return _mm_cmpestrz(a, la, b, lb, 0x31);
		case 0x32: return _mm_cmpestrz(a, la, b, lb, 0x32);
		case 0x33: return _mm_cmpestrz(a, la, b, lb, 0x33);
		case 0x34: return _mm_cmpestrz(a, la, b, lb, 0x34);
		case 0x35: return _mm_cmpestrz(a, la, b, lb, 0x35);
		case 0x36: return _mm_cmpestrz(a, la, b, lb, 0x36);
		case 0x37: return _mm_cmpestrz(a, la, b, lb, 0x37);
		case 0x38: return _mm_cmpestrz(a, la, b, lb, 0x38);
		case 0x39: return _mm_cmpestrz(a, la, b, lb, 0x39);
		case 0x3A: return _mm_cmpestrz(a, la, b, lb, 0x3A);
		case 0x3B: return _mm_cmpestrz(a, la, b, lb, 0x3B);
		case 0x3C: return _mm_cmpestrz(a, la, b, lb, 0x3C);
		case 0x3D: return _mm_cmpestrz(a, la, b, lb, 0x3D);
		case 0x3E: return _mm_cmpestrz(a, la, b, lb, 0x3E);
		case 0x3F: return _mm_cmpestrz(a, la, b, lb, 0x3F);
		case 0x40: return _mm_cmpestrz(a, la, b, lb, 0x40);
		case 0x41: return _mm_cmpestrz(a, la, b, lb, 0x41);
		case 0x42: return _mm_cmpestrz(a, la, b, lb, 0x42);
		case 0x43: return _mm_cmpestrz(a, la, b, lb, 0x43);
		case 0x44: return _mm_cmpestrz(a, la, b, lb, 0x44);
		case 0x45: return _mm_cmpestrz(a, la, b, lb, 0x45);
		case 0x46: return _mm_cmpestrz(a, la, b, lb, 0x46);
		case 0x47: return _mm_cmpestrz(a, la, b, lb, 0x47);
		case 0x48: return _mm_cmpestrz(a, la, b, lb, 0x48);
		case 0x49: return _mm_cmpestrz(a, la, b, lb, 0x49);
		case 0x4A: return _mm_cmpestrz(a, la, b, lb, 0x4A);
		case 0x4B: return _mm_cmpestrz(a, la, b, lb, 0x4B);
		case 0x4C: return _mm_cmpestrz(a, la, b, lb, 0x4C);
		case 0x4D: return _mm_cmpestrz(a, la, b, lb, 0x4D);
		case 0x4E: return _mm_cmpestrz(a, la, b, lb, 0x4E);
		case 0x4F: return _mm_cmpestrz(a, la, b, lb, 0x4F);
		case 0x50: return _mm_cmpestrz(a, la, b, lb, 0x50);
		case 0x51: return _mm_cmpestrz(a, la, b, lb, 0x51);
		case 0x52: return _mm_cmpestrz(a, la, b, lb, 0x52);
		case 0x53: return _mm_cmpestrz(a, la, b, lb, 0x53);
		case 0x54: return _mm_cmpestrz(a, la, b, lb, 0x54);
		case 0x55: return _mm_cmpestrz(a, la, b, lb, 0x55);
		case 0x56: return _mm_cmpestrz(a, la, b, lb, 0x56);
		case 0x57: return _mm_cmpestrz(a, la, b, lb, 0x57);
		case 0x58: return _mm_cmpestrz(a, la, b, lb, 0x58);
		case 0x59: return _mm_cmpestrz(a, la, b, lb, 0x59);
		case 0x5A: return _mm_cmpestrz(a, la, b, lb, 0x5A);
		case 0x5B: return _mm_cmpestrz(a, la, b, lb, 0x5B);
		case 0x5C: return _mm_cmpestrz(a, la, b, lb, 0x5C);
		case 0x5D: return _mm_cmpestrz(a, la, b, lb, 0x5D);
		case 0x5E: return _mm_cmpestrz(a, la, b, lb, 0x5E);
		case 0x5F: return _mm_cmpestrz(a, la, b, lb, 0x5F);
		case 0x60: return _mm_cmpestrz(a, la, b, lb, 0x60);
		case 0x61: return _mm_cmpestrz(a, la, b, lb, 0x61);
		case 0x62: return _mm_cmpestrz(a, la, b, lb, 0x62);
		case 0x63: return _mm_cmpestrz(a, la, b, lb, 0x63);
		case 0x64: return _mm_cmpestrz(a, la, b, lb, 0x64);
		case 0x65: return _mm_cmpestrz(a, la, b, lb, 0x65);
		case 0x66: return _mm_cmpestrz(a, la, b, lb, 0x66);
		case 0x67: return _mm_cmpestrz(a, la, b, lb, 0x67);
		case 0x68: return _mm_cmpestrz(a, la, b, lb, 0x68);
		case 0x69: return _mm_cmpestrz(a, la, b, lb, 0x69);
		case 0x6A: return _mm_cmpestrz(a, la, b, lb, 0x6A);
		case 0x6B: return _mm_cmpestrz(a, la, b, lb, 0x6B);
		case 0x6C: return _mm_cmpestrz(a, la, b, lb, 0x6C);
		case 0x6D: return _mm_cmpestrz(a, la, b, lb, 0x6D);
		case 0x6E: return _mm_cmpestrz(a, la, b, lb, 0x6E);
		case 0x6F: return _mm_cmpestrz(a, la, b, lb, 0x6F);
		case 0x70: return _mm_cmpestrz(a, la, b, lb, 0x70);
		case 0x71: return _mm_cmpestrz(a, la, b, lb, 0x71);
		case 0x72: return _mm_cmpestrz(a, la, b, lb, 0x72);
		case 0x73: return _mm_cmpestrz(a, la, b, lb, 0x73);
		case 0x74: return _mm_cmpestrz(a, la, b, lb, 0x74);
		case 0x75: return _mm_cmpestrz(a, la, b, lb, 0x75);
		case 0x76: return _mm_cmpestrz(a, la, b, lb, 0x76);
		case 0x77: return _mm_cmpestrz(a, la, b, lb, 0x77);
		case 0x78: return _mm_cmpestrz(a, la, b, lb, 0x78);
		case 0x79: return _mm_cmpestrz(a, la, b, lb, 0x79);
		case 0x7A: return _mm_cmpestrz(a, la, b, lb, 0x7A);
		case 0x7B: return _mm_cmpestrz(a, la, b, lb, 0x7B);
		case 0x7C: return _mm_cmpestrz(a, la, b, lb, 0x7C);
		case 0x7D: return _mm_cmpestrz(a, la, b, lb, 0x7D);
		case 0x7E: return _mm_cmpestrz(a, la, b, lb, 0x7E);
		default:   return _mm_cmpestrz(a, la, b, lb, 0x7F);
	}
}

__m128i sse4_2_cmpgt_epi64(__m128i a, __m128i b) { return _mm_cmpgt_epi64(a, b); }

int sse4_2_cmpistra(__m128i a, __m128i b, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpistra(a, b, 0x00);
		case 0x01: return _mm_cmpistra(a, b, 0x01);
		case 0x02: return _mm_cmpistra(a, b, 0x02);
		case 0x03: return _mm_cmpistra(a, b, 0x03);
		case 0x04: return _mm_cmpistra(a, b, 0x04);
		case 0x05: return _mm_cmpistra(a, b, 0x05);
		case 0x06: return _mm_cmpistra(a, b, 0x06);
		case 0x07: return _mm_cmpistra(a, b, 0x07);
		case 0x08: return _mm_cmpistra(a, b, 0x08);
		case 0x09: return _mm_cmpistra(a, b, 0x09);
		case 0x0A: return _mm_cmpistra(a, b, 0x0A);
		case 0x0B: return _mm_cmpistra(a, b, 0x0B);
		case 0x0C: return _mm_cmpistra(a, b, 0x0C);
		case 0x0D: return _mm_cmpistra(a, b, 0x0D);
		case 0x0E: return _mm_cmpistra(a, b, 0x0E);
		case 0x0F: return _mm_cmpistra(a, b, 0x0F);
		case 0x10: return _mm_cmpistra(a, b, 0x10);
		case 0x11: return _mm_cmpistra(a, b, 0x11);
		case 0x12: return _mm_cmpistra(a, b, 0x12);
		case 0x13: return _mm_cmpistra(a, b, 0x13);
		case 0x14: return _mm_cmpistra(a, b, 0x14);
		case 0x15: return _mm_cmpistra(a, b, 0x15);
		case 0x16: return _mm_cmpistra(a, b, 0x16);
		case 0x17: return _mm_cmpistra(a, b, 0x17);
		case 0x18: return _mm_cmpistra(a, b, 0x18);
		case 0x19: return _mm_cmpistra(a, b, 0x19);
		case 0x1A: return _mm_cmpistra(a, b, 0x1A);
		case 0x1B: return _mm_cmpistra(a, b, 0x1B);
		case 0x1C: return _mm_cmpistra(a, b, 0x1C);
		case 0x1D: return _mm_cmpistra(a, b, 0x1D);
		case 0x1E: return _mm_cmpistra(a, b, 0x1E);
		case 0x1F: return _mm_cmpistra(a, b, 0x1F);
		case 0x20: return _mm_cmpistra(a, b, 0x20);
		case 0x21: return _mm_cmpistra(a, b, 0x21);
		case 0x22: return _mm_cmpistra(a, b, 0x22);
		case 0x23: return _mm_cmpistra(a, b, 0x23);
		case 0x24: return _mm_cmpistra(a, b, 0x24);
		case 0x25: return _mm_cmpistra(a, b, 0x25);
		case 0x26: return _mm_cmpistra(a, b, 0x26);
		case 0x27: return _mm_cmpistra(a, b, 0x27);
		case 0x28: return _mm_cmpistra(a, b, 0x28);
		case 0x29: return _mm_cmpistra(a, b, 0x29);
		case 0x2A: return _mm_cmpistra(a, b, 0x2A);
		case 0x2B: return _mm_cmpistra(a, b, 0x2B);
		case 0x2C: return _mm_cmpistra(a, b, 0x2C);
		case 0x2D: return _mm_cmpistra(a, b, 0x2D);
		case 0x2E: return _mm_cmpistra(a, b, 0x2E);
		case 0x2F: return _mm_cmpistra(a, b, 0x2F);
		case 0x30: return _mm_cmpistra(a, b, 0x30);
		case 0x31: return _mm_cmpistra(a, b, 0x31);
		case 0x32: return _mm_cmpistra(a, b, 0x32);
		case 0x33: return _mm_cmpistra(a, b, 0x33);
		case 0x34: return _mm_cmpistra(a, b, 0x34);
		case 0x35: return _mm_cmpistra(a, b, 0x35);
		case 0x36: return _mm_cmpistra(a, b, 0x36);
		case 0x37: return _mm_cmpistra(a, b, 0x37);
		case 0x38: return _mm_cmpistra(a, b, 0x38);
		case 0x39: return _mm_cmpistra(a, b, 0x39);
		case 0x3A: return _mm_cmpistra(a, b, 0x3A);
		case 0x3B: return _mm_cmpistra(a, b, 0x3B);
		case 0x3C: return _mm_cmpistra(a, b, 0x3C);
		case 0x3D: return _mm_cmpistra(a, b, 0x3D);
		case 0x3E: return _mm_cmpistra(a, b, 0x3E);
		case 0x3F: return _mm_cmpistra(a, b, 0x3F);
		case 0x40: return _mm_cmpistra(a, b, 0x40);
		case 0x41: return _mm_cmpistra(a, b, 0x41);
		case 0x42: return _mm_cmpistra(a, b, 0x42);
		case 0x43: return _mm_cmpistra(a, b, 0x43);
		case 0x44: return _mm_cmpistra(a, b, 0x44);
		case 0x45: return _mm_cmpistra(a, b, 0x45);
		case 0x46: return _mm_cmpistra(a, b, 0x46);
		case 0x47: return _mm_cmpistra(a, b, 0x47);
		case 0x48: return _mm_cmpistra(a, b, 0x48);
		case 0x49: return _mm_cmpistra(a, b, 0x49);
		case 0x4A: return _mm_cmpistra(a, b, 0x4A);
		case 0x4B: return _mm_cmpistra(a, b, 0x4B);
		case 0x4C: return _mm_cmpistra(a, b, 0x4C);
		case 0x4D: return _mm_cmpistra(a, b, 0x4D);
		case 0x4E: return _mm_cmpistra(a, b, 0x4E);
		case 0x4F: return _mm_cmpistra(a, b, 0x4F);
		case 0x50: return _mm_cmpistra(a, b, 0x50);
		case 0x51: return _mm_cmpistra(a, b, 0x51);
		case 0x52: return _mm_cmpistra(a, b, 0x52);
		case 0x53: return _mm_cmpistra(a, b, 0x53);
		case 0x54: return _mm_cmpistra(a, b, 0x54);
		case 0x55: return _mm_cmpistra(a, b, 0x55);
		case 0x56: return _mm_cmpistra(a, b, 0x56);
		case 0x57: return _mm_cmpistra(a, b, 0x57);
		case 0x58: return _mm_cmpistra(a, b, 0x58);
		case 0x59: return _mm_cmpistra(a, b, 0x59);
		case 0x5A: return _mm_cmpistra(a, b, 0x5A);
		case 0x5B: return _mm_cmpistra(a, b, 0x5B);
		case 0x5C: return _mm_cmpistra(a, b, 0x5C);
		case 0x5D: return _mm_cmpistra(a, b, 0x5D);
		case 0x5E: return _mm_cmpistra(a, b, 0x5E);
		case 0x5F: return _mm_cmpistra(a, b, 0x5F);
		case 0x60: return _mm_cmpistra(a, b, 0x60);
		case 0x61: return _mm_cmpistra(a, b, 0x61);
		case 0x62: return _mm_cmpistra(a, b, 0x62);
		case 0x63: return _mm_cmpistra(a, b, 0x63);
		case 0x64: return _mm_cmpistra(a, b, 0x64);
		case 0x65: return _mm_cmpistra(a, b, 0x65);
		case 0x66: return _mm_cmpistra(a, b, 0x66);
		case 0x67: return _mm_cmpistra(a, b, 0x67);
		case 0x68: return _mm_cmpistra(a, b, 0x68);
		case 0x69: return _mm_cmpistra(a, b, 0x69);
		case 0x6A: return _mm_cmpistra(a, b, 0x6A);
		case 0x6B: return _mm_cmpistra(a, b, 0x6B);
		case 0x6C: return _mm_cmpistra(a, b, 0x6C);
		case 0x6D: return _mm_cmpistra(a, b, 0x6D);
		case 0x6E: return _mm_cmpistra(a, b, 0x6E);
		case 0x6F: return _mm_cmpistra(a, b, 0x6F);
		case 0x70: return _mm_cmpistra(a, b, 0x70);
		case 0x71: return _mm_cmpistra(a, b, 0x71);
		case 0x72: return _mm_cmpistra(a, b, 0x72);
		case 0x73: return _mm_cmpistra(a, b, 0x73);
		case 0x74: return _mm_cmpistra(a, b, 0x74);
		case 0x75: return _mm_cmpistra(a, b, 0x75);
		case 0x76: return _mm_cmpistra(a, b, 0x76);
		case 0x77: return _mm_cmpistra(a, b, 0x77);
		case 0x78: return _mm_cmpistra(a, b, 0x78);
		case 0x79: return _mm_cmpistra(a, b, 0x79);
		case 0x7A: return _mm_cmpistra(a, b, 0x7A);
		case 0x7B: return _mm_cmpistra(a, b, 0x7B);
		case 0x7C: return _mm_cmpistra(a, b, 0x7C);
		case 0x7D: return _mm_cmpistra(a, b, 0x7D);
		case 0x7E: return _mm_cmpistra(a, b, 0x7E);
		default:   return _mm_cmpistra(a, b, 0x7F);
	}
}

int sse4_2_cmpistrc(__m128i a, __m128i b, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpistrc(a, b, 0x00);
		case 0x01: return _mm_cmpistrc(a, b, 0x01);
		case 0x02: return _mm_cmpistrc(a, b, 0x02);
		case 0x03: return _mm_cmpistrc(a, b, 0x03);
		case 0x04: return _mm_cmpistrc(a, b, 0x04);
		case 0x05: return _mm_cmpistrc(a, b, 0x05);
		case 0x06: return _mm_cmpistrc(a, b, 0x06);
		case 0x07: return _mm_cmpistrc(a, b, 0x07);
		case 0x08: return _mm_cmpistrc(a, b, 0x08);
		case 0x09: return _mm_cmpistrc(a, b, 0x09);
		case 0x0A: return _mm_cmpistrc(a, b, 0x0A);
		case 0x0B: return _mm_cmpistrc(a, b, 0x0B);
		case 0x0C: return _mm_cmpistrc(a, b, 0x0C);
		case 0x0D: return _mm_cmpistrc(a, b, 0x0D);
		case 0x0E: return _mm_cmpistrc(a, b, 0x0E);
		case 0x0F: return _mm_cmpistrc(a, b, 0x0F);
		case 0x10: return _mm_cmpistrc(a, b, 0x10);
		case 0x11: return _mm_cmpistrc(a, b, 0x11);
		case 0x12: return _mm_cmpistrc(a, b, 0x12);
		case 0x13: return _mm_cmpistrc(a, b, 0x13);
		case 0x14: return _mm_cmpistrc(a, b, 0x14);
		case 0x15: return _mm_cmpistrc(a, b, 0x15);
		case 0x16: return _mm_cmpistrc(a, b, 0x16);
		case 0x17: return _mm_cmpistrc(a, b, 0x17);
		case 0x18: return _mm_cmpistrc(a, b, 0x18);
		case 0x19: return _mm_cmpistrc(a, b, 0x19);
		case 0x1A: return _mm_cmpistrc(a, b, 0x1A);
		case 0x1B: return _mm_cmpistrc(a, b, 0x1B);
		case 0x1C: return _mm_cmpistrc(a, b, 0x1C);
		case 0x1D: return _mm_cmpistrc(a, b, 0x1D);
		case 0x1E: return _mm_cmpistrc(a, b, 0x1E);
		case 0x1F: return _mm_cmpistrc(a, b, 0x1F);
		case 0x20: return _mm_cmpistrc(a, b, 0x20);
		case 0x21: return _mm_cmpistrc(a, b, 0x21);
		case 0x22: return _mm_cmpistrc(a, b, 0x22);
		case 0x23: return _mm_cmpistrc(a, b, 0x23);
		case 0x24: return _mm_cmpistrc(a, b, 0x24);
		case 0x25: return _mm_cmpistrc(a, b, 0x25);
		case 0x26: return _mm_cmpistrc(a, b, 0x26);
		case 0x27: return _mm_cmpistrc(a, b, 0x27);
		case 0x28: return _mm_cmpistrc(a, b, 0x28);
		case 0x29: return _mm_cmpistrc(a, b, 0x29);
		case 0x2A: return _mm_cmpistrc(a, b, 0x2A);
		case 0x2B: return _mm_cmpistrc(a, b, 0x2B);
		case 0x2C: return _mm_cmpistrc(a, b, 0x2C);
		case 0x2D: return _mm_cmpistrc(a, b, 0x2D);
		case 0x2E: return _mm_cmpistrc(a, b, 0x2E);
		case 0x2F: return _mm_cmpistrc(a, b, 0x2F);
		case 0x30: return _mm_cmpistrc(a, b, 0x30);
		case 0x31: return _mm_cmpistrc(a, b, 0x31);
		case 0x32: return _mm_cmpistrc(a, b, 0x32);
		case 0x33: return _mm_cmpistrc(a, b, 0x33);
		case 0x34: return _mm_cmpistrc(a, b, 0x34);
		case 0x35: return _mm_cmpistrc(a, b, 0x35);
		case 0x36: return _mm_cmpistrc(a, b, 0x36);
		case 0x37: return _mm_cmpistrc(a, b, 0x37);
		case 0x38: return _mm_cmpistrc(a, b, 0x38);
		case 0x39: return _mm_cmpistrc(a, b, 0x39);
		case 0x3A: return _mm_cmpistrc(a, b, 0x3A);
		case 0x3B: return _mm_cmpistrc(a, b, 0x3B);
		case 0x3C: return _mm_cmpistrc(a, b, 0x3C);
		case 0x3D: return _mm_cmpistrc(a, b, 0x3D);
		case 0x3E: return _mm_cmpistrc(a, b, 0x3E);
		case 0x3F: return _mm_cmpistrc(a, b, 0x3F);
		case 0x40: return _mm_cmpistrc(a, b, 0x40);
		case 0x41: return _mm_cmpistrc(a, b, 0x41);
		case 0x42: return _mm_cmpistrc(a, b, 0x42);
		case 0x43: return _mm_cmpistrc(a, b, 0x43);
		case 0x44: return _mm_cmpistrc(a, b, 0x44);
		case 0x45: return _mm_cmpistrc(a, b, 0x45);
		case 0x46: return _mm_cmpistrc(a, b, 0x46);
		case 0x47: return _mm_cmpistrc(a, b, 0x47);
		case 0x48: return _mm_cmpistrc(a, b, 0x48);
		case 0x49: return _mm_cmpistrc(a, b, 0x49);
		case 0x4A: return _mm_cmpistrc(a, b, 0x4A);
		case 0x4B: return _mm_cmpistrc(a, b, 0x4B);
		case 0x4C: return _mm_cmpistrc(a, b, 0x4C);
		case 0x4D: return _mm_cmpistrc(a, b, 0x4D);
		case 0x4E: return _mm_cmpistrc(a, b, 0x4E);
		case 0x4F: return _mm_cmpistrc(a, b, 0x4F);
		case 0x50: return _mm_cmpistrc(a, b, 0x50);
		case 0x51: return _mm_cmpistrc(a, b, 0x51);
		case 0x52: return _mm_cmpistrc(a, b, 0x52);
		case 0x53: return _mm_cmpistrc(a, b, 0x53);
		case 0x54: return _mm_cmpistrc(a, b, 0x54);
		case 0x55: return _mm_cmpistrc(a, b, 0x55);
		case 0x56: return _mm_cmpistrc(a, b, 0x56);
		case 0x57: return _mm_cmpistrc(a, b, 0x57);
		case 0x58: return _mm_cmpistrc(a, b, 0x58);
		case 0x59: return _mm_cmpistrc(a, b, 0x59);
		case 0x5A: return _mm_cmpistrc(a, b, 0x5A);
		case 0x5B: return _mm_cmpistrc(a, b, 0x5B);
		case 0x5C: return _mm_cmpistrc(a, b, 0x5C);
		case 0x5D: return _mm_cmpistrc(a, b, 0x5D);
		case 0x5E: return _mm_cmpistrc(a, b, 0x5E);
		case 0x5F: return _mm_cmpistrc(a, b, 0x5F);
		case 0x60: return _mm_cmpistrc(a, b, 0x60);
		case 0x61: return _mm_cmpistrc(a, b, 0x61);
		case 0x62: return _mm_cmpistrc(a, b, 0x62);
		case 0x63: return _mm_cmpistrc(a, b, 0x63);
		case 0x64: return _mm_cmpistrc(a, b, 0x64);
		case 0x65: return _mm_cmpistrc(a, b, 0x65);
		case 0x66: return _mm_cmpistrc(a, b, 0x66);
		case 0x67: return _mm_cmpistrc(a, b, 0x67);
		case 0x68: return _mm_cmpistrc(a, b, 0x68);
		case 0x69: return _mm_cmpistrc(a, b, 0x69);
		case 0x6A: return _mm_cmpistrc(a, b, 0x6A);
		case 0x6B: return _mm_cmpistrc(a, b, 0x6B);
		case 0x6C: return _mm_cmpistrc(a, b, 0x6C);
		case 0x6D: return _mm_cmpistrc(a, b, 0x6D);
		case 0x6E: return _mm_cmpistrc(a, b, 0x6E);
		case 0x6F: return _mm_cmpistrc(a, b, 0x6F);
		case 0x70: return _mm_cmpistrc(a, b, 0x70);
		case 0x71: return _mm_cmpistrc(a, b, 0x71);
		case 0x72: return _mm_cmpistrc(a, b, 0x72);
		case 0x73: return _mm_cmpistrc(a, b, 0x73);
		case 0x74: return _mm_cmpistrc(a, b, 0x74);
		case 0x75: return _mm_cmpistrc(a, b, 0x75);
		case 0x76: return _mm_cmpistrc(a, b, 0x76);
		case 0x77: return _mm_cmpistrc(a, b, 0x77);
		case 0x78: return _mm_cmpistrc(a, b, 0x78);
		case 0x79: return _mm_cmpistrc(a, b, 0x79);
		case 0x7A: return _mm_cmpistrc(a, b, 0x7A);
		case 0x7B: return _mm_cmpistrc(a, b, 0x7B);
		case 0x7C: return _mm_cmpistrc(a, b, 0x7C);
		case 0x7D: return _mm_cmpistrc(a, b, 0x7D);
		case 0x7E: return _mm_cmpistrc(a, b, 0x7E);
		default:   return _mm_cmpistrc(a, b, 0x7F);
	}
}

int sse4_2_cmpistri(__m128i a, __m128i b, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpistri(a, b, 0x00);
		case 0x01: return _mm_cmpistri(a, b, 0x01);
		case 0x02: return _mm_cmpistri(a, b, 0x02);
		case 0x03: return _mm_cmpistri(a, b, 0x03);
		case 0x04: return _mm_cmpistri(a, b, 0x04);
		case 0x05: return _mm_cmpistri(a, b, 0x05);
		case 0x06: return _mm_cmpistri(a, b, 0x06);
		case 0x07: return _mm_cmpistri(a, b, 0x07);
		case 0x08: return _mm_cmpistri(a, b, 0x08);
		case 0x09: return _mm_cmpistri(a, b, 0x09);
		case 0x0A: return _mm_cmpistri(a, b, 0x0A);
		case 0x0B: return _mm_cmpistri(a, b, 0x0B);
		case 0x0C: return _mm_cmpistri(a, b, 0x0C);
		case 0x0D: return _mm_cmpistri(a, b, 0x0D);
		case 0x0E: return _mm_cmpistri(a, b, 0x0E);
		case 0x0F: return _mm_cmpistri(a, b, 0x0F);
		case 0x10: return _mm_cmpistri(a, b, 0x10);
		case 0x11: return _mm_cmpistri(a, b, 0x11);
		case 0x12: return _mm_cmpistri(a, b, 0x12);
		case 0x13: return _mm_cmpistri(a, b, 0x13);
		case 0x14: return _mm_cmpistri(a, b, 0x14);
		case 0x15: return _mm_cmpistri(a, b, 0x15);
		case 0x16: return _mm_cmpistri(a, b, 0x16);
		case 0x17: return _mm_cmpistri(a, b, 0x17);
		case 0x18: return _mm_cmpistri(a, b, 0x18);
		case 0x19: return _mm_cmpistri(a, b, 0x19);
		case 0x1A: return _mm_cmpistri(a, b, 0x1A);
		case 0x1B: return _mm_cmpistri(a, b, 0x1B);
		case 0x1C: return _mm_cmpistri(a, b, 0x1C);
		case 0x1D: return _mm_cmpistri(a, b, 0x1D);
		case 0x1E: return _mm_cmpistri(a, b, 0x1E);
		case 0x1F: return _mm_cmpistri(a, b, 0x1F);
		case 0x20: return _mm_cmpistri(a, b, 0x20);
		case 0x21: return _mm_cmpistri(a, b, 0x21);
		case 0x22: return _mm_cmpistri(a, b, 0x22);
		case 0x23: return _mm_cmpistri(a, b, 0x23);
		case 0x24: return _mm_cmpistri(a, b, 0x24);
		case 0x25: return _mm_cmpistri(a, b, 0x25);
		case 0x26: return _mm_cmpistri(a, b, 0x26);
		case 0x27: return _mm_cmpistri(a, b, 0x27);
		case 0x28: return _mm_cmpistri(a, b, 0x28);
		case 0x29: return _mm_cmpistri(a, b, 0x29);
		case 0x2A: return _mm_cmpistri(a, b, 0x2A);
		case 0x2B: return _mm_cmpistri(a, b, 0x2B);
		case 0x2C: return _mm_cmpistri(a, b, 0x2C);
		case 0x2D: return _mm_cmpistri(a, b, 0x2D);
		case 0x2E: return _mm_cmpistri(a, b, 0x2E);
		case 0x2F: return _mm_cmpistri(a, b, 0x2F);
		case 0x30: return _mm_cmpistri(a, b, 0x30);
		case 0x31: return _mm_cmpistri(a, b, 0x31);
		case 0x32: return _mm_cmpistri(a, b, 0x32);
		case 0x33: return _mm_cmpistri(a, b, 0x33);
		case 0x34: return _mm_cmpistri(a, b, 0x34);
		case 0x35: return _mm_cmpistri(a, b, 0x35);
		case 0x36: return _mm_cmpistri(a, b, 0x36);
		case 0x37: return _mm_cmpistri(a, b, 0x37);
		case 0x38: return _mm_cmpistri(a, b, 0x38);
		case 0x39: return _mm_cmpistri(a, b, 0x39);
		case 0x3A: return _mm_cmpistri(a, b, 0x3A);
		case 0x3B: return _mm_cmpistri(a, b, 0x3B);
		case 0x3C: return _mm_cmpistri(a, b, 0x3C);
		case 0x3D: return _mm_cmpistri(a, b, 0x3D);
		case 0x3E: return _mm_cmpistri(a, b, 0x3E);
		case 0x3F: return _mm_cmpistri(a, b, 0x3F);
		case 0x40: return _mm_cmpistri(a, b, 0x40);
		case 0x41: return _mm_cmpistri(a, b, 0x41);
		case 0x42: return _mm_cmpistri(a, b, 0x42);
		case 0x43: return _mm_cmpistri(a, b, 0x43);
		case 0x44: return _mm_cmpistri(a, b, 0x44);
		case 0x45: return _mm_cmpistri(a, b, 0x45);
		case 0x46: return _mm_cmpistri(a, b, 0x46);
		case 0x47: return _mm_cmpistri(a, b, 0x47);
		case 0x48: return _mm_cmpistri(a, b, 0x48);
		case 0x49: return _mm_cmpistri(a, b, 0x49);
		case 0x4A: return _mm_cmpistri(a, b, 0x4A);
		case 0x4B: return _mm_cmpistri(a, b, 0x4B);
		case 0x4C: return _mm_cmpistri(a, b, 0x4C);
		case 0x4D: return _mm_cmpistri(a, b, 0x4D);
		case 0x4E: return _mm_cmpistri(a, b, 0x4E);
		case 0x4F: return _mm_cmpistri(a, b, 0x4F);
		case 0x50: return _mm_cmpistri(a, b, 0x50);
		case 0x51: return _mm_cmpistri(a, b, 0x51);
		case 0x52: return _mm_cmpistri(a, b, 0x52);
		case 0x53: return _mm_cmpistri(a, b, 0x53);
		case 0x54: return _mm_cmpistri(a, b, 0x54);
		case 0x55: return _mm_cmpistri(a, b, 0x55);
		case 0x56: return _mm_cmpistri(a, b, 0x56);
		case 0x57: return _mm_cmpistri(a, b, 0x57);
		case 0x58: return _mm_cmpistri(a, b, 0x58);
		case 0x59: return _mm_cmpistri(a, b, 0x59);
		case 0x5A: return _mm_cmpistri(a, b, 0x5A);
		case 0x5B: return _mm_cmpistri(a, b, 0x5B);
		case 0x5C: return _mm_cmpistri(a, b, 0x5C);
		case 0x5D: return _mm_cmpistri(a, b, 0x5D);
		case 0x5E: return _mm_cmpistri(a, b, 0x5E);
		case 0x5F: return _mm_cmpistri(a, b, 0x5F);
		case 0x60: return _mm_cmpistri(a, b, 0x60);
		case 0x61: return _mm_cmpistri(a, b, 0x61);
		case 0x62: return _mm_cmpistri(a, b, 0x62);
		case 0x63: return _mm_cmpistri(a, b, 0x63);
		case 0x64: return _mm_cmpistri(a, b, 0x64);
		case 0x65: return _mm_cmpistri(a, b, 0x65);
		case 0x66: return _mm_cmpistri(a, b, 0x66);
		case 0x67: return _mm_cmpistri(a, b, 0x67);
		case 0x68: return _mm_cmpistri(a, b, 0x68);
		case 0x69: return _mm_cmpistri(a, b, 0x69);
		case 0x6A: return _mm_cmpistri(a, b, 0x6A);
		case 0x6B: return _mm_cmpistri(a, b, 0x6B);
		case 0x6C: return _mm_cmpistri(a, b, 0x6C);
		case 0x6D: return _mm_cmpistri(a, b, 0x6D);
		case 0x6E: return _mm_cmpistri(a, b, 0x6E);
		case 0x6F: return _mm_cmpistri(a, b, 0x6F);
		case 0x70: return _mm_cmpistri(a, b, 0x70);
		case 0x71: return _mm_cmpistri(a, b, 0x71);
		case 0x72: return _mm_cmpistri(a, b, 0x72);
		case 0x73: return _mm_cmpistri(a, b, 0x73);
		case 0x74: return _mm_cmpistri(a, b, 0x74);
		case 0x75: return _mm_cmpistri(a, b, 0x75);
		case 0x76: return _mm_cmpistri(a, b, 0x76);
		case 0x77: return _mm_cmpistri(a, b, 0x77);
		case 0x78: return _mm_cmpistri(a, b, 0x78);
		case 0x79: return _mm_cmpistri(a, b, 0x79);
		case 0x7A: return _mm_cmpistri(a, b, 0x7A);
		case 0x7B: return _mm_cmpistri(a, b, 0x7B);
		case 0x7C: return _mm_cmpistri(a, b, 0x7C);
		case 0x7D: return _mm_cmpistri(a, b, 0x7D);
		case 0x7E: return _mm_cmpistri(a, b, 0x7E);
		default:   return _mm_cmpistri(a, b, 0x7F);
	}
}

__m128i sse4_2_cmpistrm(__m128i a, __m128i b, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpistrm(a, b, 0x00);
		case 0x01: return _mm_cmpistrm(a, b, 0x01);
		case 0x02: return _mm_cmpistrm(a, b, 0x02);
		case 0x03: return _mm_cmpistrm(a, b, 0x03);
		case 0x04: return _mm_cmpistrm(a, b, 0x04);
		case 0x05: return _mm_cmpistrm(a, b, 0x05);
		case 0x06: return _mm_cmpistrm(a, b, 0x06);
		case 0x07: return _mm_cmpistrm(a, b, 0x07);
		case 0x08: return _mm_cmpistrm(a, b, 0x08);
		case 0x09: return _mm_cmpistrm(a, b, 0x09);
		case 0x0A: return _mm_cmpistrm(a, b, 0x0A);
		case 0x0B: return _mm_cmpistrm(a, b, 0x0B);
		case 0x0C: return _mm_cmpistrm(a, b, 0x0C);
		case 0x0D: return _mm_cmpistrm(a, b, 0x0D);
		case 0x0E: return _mm_cmpistrm(a, b, 0x0E);
		case 0x0F: return _mm_cmpistrm(a, b, 0x0F);
		case 0x10: return _mm_cmpistrm(a, b, 0x10);
		case 0x11: return _mm_cmpistrm(a, b, 0x11);
		case 0x12: return _mm_cmpistrm(a, b, 0x12);
		case 0x13: return _mm_cmpistrm(a, b, 0x13);
		case 0x14: return _mm_cmpistrm(a, b, 0x14);
		case 0x15: return _mm_cmpistrm(a, b, 0x15);
		case 0x16: return _mm_cmpistrm(a, b, 0x16);
		case 0x17: return _mm_cmpistrm(a, b, 0x17);
		case 0x18: return _mm_cmpistrm(a, b, 0x18);
		case 0x19: return _mm_cmpistrm(a, b, 0x19);
		case 0x1A: return _mm_cmpistrm(a, b, 0x1A);
		case 0x1B: return _mm_cmpistrm(a, b, 0x1B);
		case 0x1C: return _mm_cmpistrm(a, b, 0x1C);
		case 0x1D: return _mm_cmpistrm(a, b, 0x1D);
		case 0x1E: return _mm_cmpistrm(a, b, 0x1E);
		case 0x1F: return _mm_cmpistrm(a, b, 0x1F);
		case 0x20: return _mm_cmpistrm(a, b, 0x20);
		case 0x21: return _mm_cmpistrm(a, b, 0x21);
		case 0x22: return _mm_cmpistrm(a, b, 0x22);
		case 0x23: return _mm_cmpistrm(a, b, 0x23);
		case 0x24: return _mm_cmpistrm(a, b, 0x24);
		case 0x25: return _mm_cmpistrm(a, b, 0x25);
		case 0x26: return _mm_cmpistrm(a, b, 0x26);
		case 0x27: return _mm_cmpistrm(a, b, 0x27);
		case 0x28: return _mm_cmpistrm(a, b, 0x28);
		case 0x29: return _mm_cmpistrm(a, b, 0x29);
		case 0x2A: return _mm_cmpistrm(a, b, 0x2A);
		case 0x2B: return _mm_cmpistrm(a, b, 0x2B);
		case 0x2C: return _mm_cmpistrm(a, b, 0x2C);
		case 0x2D: return _mm_cmpistrm(a, b, 0x2D);
		case 0x2E: return _mm_cmpistrm(a, b, 0x2E);
		case 0x2F: return _mm_cmpistrm(a, b, 0x2F);
		case 0x30: return _mm_cmpistrm(a, b, 0x30);
		case 0x31: return _mm_cmpistrm(a, b, 0x31);
		case 0x32: return _mm_cmpistrm(a, b, 0x32);
		case 0x33: return _mm_cmpistrm(a, b, 0x33);
		case 0x34: return _mm_cmpistrm(a, b, 0x34);
		case 0x35: return _mm_cmpistrm(a, b, 0x35);
		case 0x36: return _mm_cmpistrm(a, b, 0x36);
		case 0x37: return _mm_cmpistrm(a, b, 0x37);
		case 0x38: return _mm_cmpistrm(a, b, 0x38);
		case 0x39: return _mm_cmpistrm(a, b, 0x39);
		case 0x3A: return _mm_cmpistrm(a, b, 0x3A);
		case 0x3B: return _mm_cmpistrm(a, b, 0x3B);
		case 0x3C: return _mm_cmpistrm(a, b, 0x3C);
		case 0x3D: return _mm_cmpistrm(a, b, 0x3D);
		case 0x3E: return _mm_cmpistrm(a, b, 0x3E);
		case 0x3F: return _mm_cmpistrm(a, b, 0x3F);
		case 0x40: return _mm_cmpistrm(a, b, 0x40);
		case 0x41: return _mm_cmpistrm(a, b, 0x41);
		case 0x42: return _mm_cmpistrm(a, b, 0x42);
		case 0x43: return _mm_cmpistrm(a, b, 0x43);
		case 0x44: return _mm_cmpistrm(a, b, 0x44);
		case 0x45: return _mm_cmpistrm(a, b, 0x45);
		case 0x46: return _mm_cmpistrm(a, b, 0x46);
		case 0x47: return _mm_cmpistrm(a, b, 0x47);
		case 0x48: return _mm_cmpistrm(a, b, 0x48);
		case 0x49: return _mm_cmpistrm(a, b, 0x49);
		case 0x4A: return _mm_cmpistrm(a, b, 0x4A);
		case 0x4B: return _mm_cmpistrm(a, b, 0x4B);
		case 0x4C: return _mm_cmpistrm(a, b, 0x4C);
		case 0x4D: return _mm_cmpistrm(a, b, 0x4D);
		case 0x4E: return _mm_cmpistrm(a, b, 0x4E);
		case 0x4F: return _mm_cmpistrm(a, b, 0x4F);
		case 0x50: return _mm_cmpistrm(a, b, 0x50);
		case 0x51: return _mm_cmpistrm(a, b, 0x51);
		case 0x52: return _mm_cmpistrm(a, b, 0x52);
		case 0x53: return _mm_cmpistrm(a, b, 0x53);
		case 0x54: return _mm_cmpistrm(a, b, 0x54);
		case 0x55: return _mm_cmpistrm(a, b, 0x55);
		case 0x56: return _mm_cmpistrm(a, b, 0x56);
		case 0x57: return _mm_cmpistrm(a, b, 0x57);
		case 0x58: return _mm_cmpistrm(a, b, 0x58);
		case 0x59: return _mm_cmpistrm(a, b, 0x59);
		case 0x5A: return _mm_cmpistrm(a, b, 0x5A);
		case 0x5B: return _mm_cmpistrm(a, b, 0x5B);
		case 0x5C: return _mm_cmpistrm(a, b, 0x5C);
		case 0x5D: return _mm_cmpistrm(a, b, 0x5D);
		case 0x5E: return _mm_cmpistrm(a, b, 0x5E);
		case 0x5F: return _mm_cmpistrm(a, b, 0x5F);
		case 0x60: return _mm_cmpistrm(a, b, 0x60);
		case 0x61: return _mm_cmpistrm(a, b, 0x61);
		case 0x62: return _mm_cmpistrm(a, b, 0x62);
		case 0x63: return _mm_cmpistrm(a, b, 0x63);
		case 0x64: return _mm_cmpistrm(a, b, 0x64);
		case 0x65: return _mm_cmpistrm(a, b, 0x65);
		case 0x66: return _mm_cmpistrm(a, b, 0x66);
		case 0x67: return _mm_cmpistrm(a, b, 0x67);
		case 0x68: return _mm_cmpistrm(a, b, 0x68);
		case 0x69: return _mm_cmpistrm(a, b, 0x69);
		case 0x6A: return _mm_cmpistrm(a, b, 0x6A);
		case 0x6B: return _mm_cmpistrm(a, b, 0x6B);
		case 0x6C: return _mm_cmpistrm(a, b, 0x6C);
		case 0x6D: return _mm_cmpistrm(a, b, 0x6D);
		case 0x6E: return _mm_cmpistrm(a, b, 0x6E);
		case 0x6F: return _mm_cmpistrm(a, b, 0x6F);
		case 0x70: return _mm_cmpistrm(a, b, 0x70);
		case 0x71: return _mm_cmpistrm(a, b, 0x71);
		case 0x72: return _mm_cmpistrm(a, b, 0x72);
		case 0x73: return _mm_cmpistrm(a, b, 0x73);
		case 0x74: return _mm_cmpistrm(a, b, 0x74);
		case 0x75: return _mm_cmpistrm(a, b, 0x75);
		case 0x76: return _mm_cmpistrm(a, b, 0x76);
		case 0x77: return _mm_cmpistrm(a, b, 0x77);
		case 0x78: return _mm_cmpistrm(a, b, 0x78);
		case 0x79: return _mm_cmpistrm(a, b, 0x79);
		case 0x7A: return _mm_cmpistrm(a, b, 0x7A);
		case 0x7B: return _mm_cmpistrm(a, b, 0x7B);
		case 0x7C: return _mm_cmpistrm(a, b, 0x7C);
		case 0x7D: return _mm_cmpistrm(a, b, 0x7D);
		case 0x7E: return _mm_cmpistrm(a, b, 0x7E);
		default:   return _mm_cmpistrm(a, b, 0x7F);
	}
}

int sse4_2_cmpistro(__m128i a, __m128i b, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpistro(a, b, 0x00);
		case 0x01: return _mm_cmpistro(a, b, 0x01);
		case 0x02: return _mm_cmpistro(a, b, 0x02);
		case 0x03: return _mm_cmpistro(a, b, 0x03);
		case 0x04: return _mm_cmpistro(a, b, 0x04);
		case 0x05: return _mm_cmpistro(a, b, 0x05);
		case 0x06: return _mm_cmpistro(a, b, 0x06);
		case 0x07: return _mm_cmpistro(a, b, 0x07);
		case 0x08: return _mm_cmpistro(a, b, 0x08);
		case 0x09: return _mm_cmpistro(a, b, 0x09);
		case 0x0A: return _mm_cmpistro(a, b, 0x0A);
		case 0x0B: return _mm_cmpistro(a, b, 0x0B);
		case 0x0C: return _mm_cmpistro(a, b, 0x0C);
		case 0x0D: return _mm_cmpistro(a, b, 0x0D);
		case 0x0E: return _mm_cmpistro(a, b, 0x0E);
		case 0x0F: return _mm_cmpistro(a, b, 0x0F);
		case 0x10: return _mm_cmpistro(a, b, 0x10);
		case 0x11: return _mm_cmpistro(a, b, 0x11);
		case 0x12: return _mm_cmpistro(a, b, 0x12);
		case 0x13: return _mm_cmpistro(a, b, 0x13);
		case 0x14: return _mm_cmpistro(a, b, 0x14);
		case 0x15: return _mm_cmpistro(a, b, 0x15);
		case 0x16: return _mm_cmpistro(a, b, 0x16);
		case 0x17: return _mm_cmpistro(a, b, 0x17);
		case 0x18: return _mm_cmpistro(a, b, 0x18);
		case 0x19: return _mm_cmpistro(a, b, 0x19);
		case 0x1A: return _mm_cmpistro(a, b, 0x1A);
		case 0x1B: return _mm_cmpistro(a, b, 0x1B);
		case 0x1C: return _mm_cmpistro(a, b, 0x1C);
		case 0x1D: return _mm_cmpistro(a, b, 0x1D);
		case 0x1E: return _mm_cmpistro(a, b, 0x1E);
		case 0x1F: return _mm_cmpistro(a, b, 0x1F);
		case 0x20: return _mm_cmpistro(a, b, 0x20);
		case 0x21: return _mm_cmpistro(a, b, 0x21);
		case 0x22: return _mm_cmpistro(a, b, 0x22);
		case 0x23: return _mm_cmpistro(a, b, 0x23);
		case 0x24: return _mm_cmpistro(a, b, 0x24);
		case 0x25: return _mm_cmpistro(a, b, 0x25);
		case 0x26: return _mm_cmpistro(a, b, 0x26);
		case 0x27: return _mm_cmpistro(a, b, 0x27);
		case 0x28: return _mm_cmpistro(a, b, 0x28);
		case 0x29: return _mm_cmpistro(a, b, 0x29);
		case 0x2A: return _mm_cmpistro(a, b, 0x2A);
		case 0x2B: return _mm_cmpistro(a, b, 0x2B);
		case 0x2C: return _mm_cmpistro(a, b, 0x2C);
		case 0x2D: return _mm_cmpistro(a, b, 0x2D);
		case 0x2E: return _mm_cmpistro(a, b, 0x2E);
		case 0x2F: return _mm_cmpistro(a, b, 0x2F);
		case 0x30: return _mm_cmpistro(a, b, 0x30);
		case 0x31: return _mm_cmpistro(a, b, 0x31);
		case 0x32: return _mm_cmpistro(a, b, 0x32);
		case 0x33: return _mm_cmpistro(a, b, 0x33);
		case 0x34: return _mm_cmpistro(a, b, 0x34);
		case 0x35: return _mm_cmpistro(a, b, 0x35);
		case 0x36: return _mm_cmpistro(a, b, 0x36);
		case 0x37: return _mm_cmpistro(a, b, 0x37);
		case 0x38: return _mm_cmpistro(a, b, 0x38);
		case 0x39: return _mm_cmpistro(a, b, 0x39);
		case 0x3A: return _mm_cmpistro(a, b, 0x3A);
		case 0x3B: return _mm_cmpistro(a, b, 0x3B);
		case 0x3C: return _mm_cmpistro(a, b, 0x3C);
		case 0x3D: return _mm_cmpistro(a, b, 0x3D);
		case 0x3E: return _mm_cmpistro(a, b, 0x3E);
		case 0x3F: return _mm_cmpistro(a, b, 0x3F);
		case 0x40: return _mm_cmpistro(a, b, 0x40);
		case 0x41: return _mm_cmpistro(a, b, 0x41);
		case 0x42: return _mm_cmpistro(a, b, 0x42);
		case 0x43: return _mm_cmpistro(a, b, 0x43);
		case 0x44: return _mm_cmpistro(a, b, 0x44);
		case 0x45: return _mm_cmpistro(a, b, 0x45);
		case 0x46: return _mm_cmpistro(a, b, 0x46);
		case 0x47: return _mm_cmpistro(a, b, 0x47);
		case 0x48: return _mm_cmpistro(a, b, 0x48);
		case 0x49: return _mm_cmpistro(a, b, 0x49);
		case 0x4A: return _mm_cmpistro(a, b, 0x4A);
		case 0x4B: return _mm_cmpistro(a, b, 0x4B);
		case 0x4C: return _mm_cmpistro(a, b, 0x4C);
		case 0x4D: return _mm_cmpistro(a, b, 0x4D);
		case 0x4E: return _mm_cmpistro(a, b, 0x4E);
		case 0x4F: return _mm_cmpistro(a, b, 0x4F);
		case 0x50: return _mm_cmpistro(a, b, 0x50);
		case 0x51: return _mm_cmpistro(a, b, 0x51);
		case 0x52: return _mm_cmpistro(a, b, 0x52);
		case 0x53: return _mm_cmpistro(a, b, 0x53);
		case 0x54: return _mm_cmpistro(a, b, 0x54);
		case 0x55: return _mm_cmpistro(a, b, 0x55);
		case 0x56: return _mm_cmpistro(a, b, 0x56);
		case 0x57: return _mm_cmpistro(a, b, 0x57);
		case 0x58: return _mm_cmpistro(a, b, 0x58);
		case 0x59: return _mm_cmpistro(a, b, 0x59);
		case 0x5A: return _mm_cmpistro(a, b, 0x5A);
		case 0x5B: return _mm_cmpistro(a, b, 0x5B);
		case 0x5C: return _mm_cmpistro(a, b, 0x5C);
		case 0x5D: return _mm_cmpistro(a, b, 0x5D);
		case 0x5E: return _mm_cmpistro(a, b, 0x5E);
		case 0x5F: return _mm_cmpistro(a, b, 0x5F);
		case 0x60: return _mm_cmpistro(a, b, 0x60);
		case 0x61: return _mm_cmpistro(a, b, 0x61);
		case 0x62: return _mm_cmpistro(a, b, 0x62);
		case 0x63: return _mm_cmpistro(a, b, 0x63);
		case 0x64: return _mm_cmpistro(a, b, 0x64);
		case 0x65: return _mm_cmpistro(a, b, 0x65);
		case 0x66: return _mm_cmpistro(a, b, 0x66);
		case 0x67: return _mm_cmpistro(a, b, 0x67);
		case 0x68: return _mm_cmpistro(a, b, 0x68);
		case 0x69: return _mm_cmpistro(a, b, 0x69);
		case 0x6A: return _mm_cmpistro(a, b, 0x6A);
		case 0x6B: return _mm_cmpistro(a, b, 0x6B);
		case 0x6C: return _mm_cmpistro(a, b, 0x6C);
		case 0x6D: return _mm_cmpistro(a, b, 0x6D);
		case 0x6E: return _mm_cmpistro(a, b, 0x6E);
		case 0x6F: return _mm_cmpistro(a, b, 0x6F);
		case 0x70: return _mm_cmpistro(a, b, 0x70);
		case 0x71: return _mm_cmpistro(a, b, 0x71);
		case 0x72: return _mm_cmpistro(a, b, 0x72);
		case 0x73: return _mm_cmpistro(a, b, 0x73);
		case 0x74: return _mm_cmpistro(a, b, 0x74);
		case 0x75: return _mm_cmpistro(a, b, 0x75);
		case 0x76: return _mm_cmpistro(a, b, 0x76);
		case 0x77: return _mm_cmpistro(a, b, 0x77);
		case 0x78: return _mm_cmpistro(a, b, 0x78);
		case 0x79: return _mm_cmpistro(a, b, 0x79);
		case 0x7A: return _mm_cmpistro(a, b, 0x7A);
		case 0x7B: return _mm_cmpistro(a, b, 0x7B);
		case 0x7C: return _mm_cmpistro(a, b, 0x7C);
		case 0x7D: return _mm_cmpistro(a, b, 0x7D);
		case 0x7E: return _mm_cmpistro(a, b, 0x7E);
		default:   return _mm_cmpistro(a, b, 0x7F);
	}
}

int sse4_2_cmpistrs(__m128i a, __m128i b, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpistrs(a, b, 0x00);
		case 0x01: return _mm_cmpistrs(a, b, 0x01);
		case 0x02: return _mm_cmpistrs(a, b, 0x02);
		case 0x03: return _mm_cmpistrs(a, b, 0x03);
		case 0x04: return _mm_cmpistrs(a, b, 0x04);
		case 0x05: return _mm_cmpistrs(a, b, 0x05);
		case 0x06: return _mm_cmpistrs(a, b, 0x06);
		case 0x07: return _mm_cmpistrs(a, b, 0x07);
		case 0x08: return _mm_cmpistrs(a, b, 0x08);
		case 0x09: return _mm_cmpistrs(a, b, 0x09);
		case 0x0A: return _mm_cmpistrs(a, b, 0x0A);
		case 0x0B: return _mm_cmpistrs(a, b, 0x0B);
		case 0x0C: return _mm_cmpistrs(a, b, 0x0C);
		case 0x0D: return _mm_cmpistrs(a, b, 0x0D);
		case 0x0E: return _mm_cmpistrs(a, b, 0x0E);
		case 0x0F: return _mm_cmpistrs(a, b, 0x0F);
		case 0x10: return _mm_cmpistrs(a, b, 0x10);
		case 0x11: return _mm_cmpistrs(a, b, 0x11);
		case 0x12: return _mm_cmpistrs(a, b, 0x12);
		case 0x13: return _mm_cmpistrs(a, b, 0x13);
		case 0x14: return _mm_cmpistrs(a, b, 0x14);
		case 0x15: return _mm_cmpistrs(a, b, 0x15);
		case 0x16: return _mm_cmpistrs(a, b, 0x16);
		case 0x17: return _mm_cmpistrs(a, b, 0x17);
		case 0x18: return _mm_cmpistrs(a, b, 0x18);
		case 0x19: return _mm_cmpistrs(a, b, 0x19);
		case 0x1A: return _mm_cmpistrs(a, b, 0x1A);
		case 0x1B: return _mm_cmpistrs(a, b, 0x1B);
		case 0x1C: return _mm_cmpistrs(a, b, 0x1C);
		case 0x1D: return _mm_cmpistrs(a, b, 0x1D);
		case 0x1E: return _mm_cmpistrs(a, b, 0x1E);
		case 0x1F: return _mm_cmpistrs(a, b, 0x1F);
		case 0x20: return _mm_cmpistrs(a, b, 0x20);
		case 0x21: return _mm_cmpistrs(a, b, 0x21);
		case 0x22: return _mm_cmpistrs(a, b, 0x22);
		case 0x23: return _mm_cmpistrs(a, b, 0x23);
		case 0x24: return _mm_cmpistrs(a, b, 0x24);
		case 0x25: return _mm_cmpistrs(a, b, 0x25);
		case 0x26: return _mm_cmpistrs(a, b, 0x26);
		case 0x27: return _mm_cmpistrs(a, b, 0x27);
		case 0x28: return _mm_cmpistrs(a, b, 0x28);
		case 0x29: return _mm_cmpistrs(a, b, 0x29);
		case 0x2A: return _mm_cmpistrs(a, b, 0x2A);
		case 0x2B: return _mm_cmpistrs(a, b, 0x2B);
		case 0x2C: return _mm_cmpistrs(a, b, 0x2C);
		case 0x2D: return _mm_cmpistrs(a, b, 0x2D);
		case 0x2E: return _mm_cmpistrs(a, b, 0x2E);
		case 0x2F: return _mm_cmpistrs(a, b, 0x2F);
		case 0x30: return _mm_cmpistrs(a, b, 0x30);
		case 0x31: return _mm_cmpistrs(a, b, 0x31);
		case 0x32: return _mm_cmpistrs(a, b, 0x32);
		case 0x33: return _mm_cmpistrs(a, b, 0x33);
		case 0x34: return _mm_cmpistrs(a, b, 0x34);
		case 0x35: return _mm_cmpistrs(a, b, 0x35);
		case 0x36: return _mm_cmpistrs(a, b, 0x36);
		case 0x37: return _mm_cmpistrs(a, b, 0x37);
		case 0x38: return _mm_cmpistrs(a, b, 0x38);
		case 0x39: return _mm_cmpistrs(a, b, 0x39);
		case 0x3A: return _mm_cmpistrs(a, b, 0x3A);
		case 0x3B: return _mm_cmpistrs(a, b, 0x3B);
		case 0x3C: return _mm_cmpistrs(a, b, 0x3C);
		case 0x3D: return _mm_cmpistrs(a, b, 0x3D);
		case 0x3E: return _mm_cmpistrs(a, b, 0x3E);
		case 0x3F: return _mm_cmpistrs(a, b, 0x3F);
		case 0x40: return _mm_cmpistrs(a, b, 0x40);
		case 0x41: return _mm_cmpistrs(a, b, 0x41);
		case 0x42: return _mm_cmpistrs(a, b, 0x42);
		case 0x43: return _mm_cmpistrs(a, b, 0x43);
		case 0x44: return _mm_cmpistrs(a, b, 0x44);
		case 0x45: return _mm_cmpistrs(a, b, 0x45);
		case 0x46: return _mm_cmpistrs(a, b, 0x46);
		case 0x47: return _mm_cmpistrs(a, b, 0x47);
		case 0x48: return _mm_cmpistrs(a, b, 0x48);
		case 0x49: return _mm_cmpistrs(a, b, 0x49);
		case 0x4A: return _mm_cmpistrs(a, b, 0x4A);
		case 0x4B: return _mm_cmpistrs(a, b, 0x4B);
		case 0x4C: return _mm_cmpistrs(a, b, 0x4C);
		case 0x4D: return _mm_cmpistrs(a, b, 0x4D);
		case 0x4E: return _mm_cmpistrs(a, b, 0x4E);
		case 0x4F: return _mm_cmpistrs(a, b, 0x4F);
		case 0x50: return _mm_cmpistrs(a, b, 0x50);
		case 0x51: return _mm_cmpistrs(a, b, 0x51);
		case 0x52: return _mm_cmpistrs(a, b, 0x52);
		case 0x53: return _mm_cmpistrs(a, b, 0x53);
		case 0x54: return _mm_cmpistrs(a, b, 0x54);
		case 0x55: return _mm_cmpistrs(a, b, 0x55);
		case 0x56: return _mm_cmpistrs(a, b, 0x56);
		case 0x57: return _mm_cmpistrs(a, b, 0x57);
		case 0x58: return _mm_cmpistrs(a, b, 0x58);
		case 0x59: return _mm_cmpistrs(a, b, 0x59);
		case 0x5A: return _mm_cmpistrs(a, b, 0x5A);
		case 0x5B: return _mm_cmpistrs(a, b, 0x5B);
		case 0x5C: return _mm_cmpistrs(a, b, 0x5C);
		case 0x5D: return _mm_cmpistrs(a, b, 0x5D);
		case 0x5E: return _mm_cmpistrs(a, b, 0x5E);
		case 0x5F: return _mm_cmpistrs(a, b, 0x5F);
		case 0x60: return _mm_cmpistrs(a, b, 0x60);
		case 0x61: return _mm_cmpistrs(a, b, 0x61);
		case 0x62: return _mm_cmpistrs(a, b, 0x62);
		case 0x63: return _mm_cmpistrs(a, b, 0x63);
		case 0x64: return _mm_cmpistrs(a, b, 0x64);
		case 0x65: return _mm_cmpistrs(a, b, 0x65);
		case 0x66: return _mm_cmpistrs(a, b, 0x66);
		case 0x67: return _mm_cmpistrs(a, b, 0x67);
		case 0x68: return _mm_cmpistrs(a, b, 0x68);
		case 0x69: return _mm_cmpistrs(a, b, 0x69);
		case 0x6A: return _mm_cmpistrs(a, b, 0x6A);
		case 0x6B: return _mm_cmpistrs(a, b, 0x6B);
		case 0x6C: return _mm_cmpistrs(a, b, 0x6C);
		case 0x6D: return _mm_cmpistrs(a, b, 0x6D);
		case 0x6E: return _mm_cmpistrs(a, b, 0x6E);
		case 0x6F: return _mm_cmpistrs(a, b, 0x6F);
		case 0x70: return _mm_cmpistrs(a, b, 0x70);
		case 0x71: return _mm_cmpistrs(a, b, 0x71);
		case 0x72: return _mm_cmpistrs(a, b, 0x72);
		case 0x73: return _mm_cmpistrs(a, b, 0x73);
		case 0x74: return _mm_cmpistrs(a, b, 0x74);
		case 0x75: return _mm_cmpistrs(a, b, 0x75);
		case 0x76: return _mm_cmpistrs(a, b, 0x76);
		case 0x77: return _mm_cmpistrs(a, b, 0x77);
		case 0x78: return _mm_cmpistrs(a, b, 0x78);
		case 0x79: return _mm_cmpistrs(a, b, 0x79);
		case 0x7A: return _mm_cmpistrs(a, b, 0x7A);
		case 0x7B: return _mm_cmpistrs(a, b, 0x7B);
		case 0x7C: return _mm_cmpistrs(a, b, 0x7C);
		case 0x7D: return _mm_cmpistrs(a, b, 0x7D);
		case 0x7E: return _mm_cmpistrs(a, b, 0x7E);
		default:   return _mm_cmpistrs(a, b, 0x7F);
	}
}

int sse4_2_cmpistrz(__m128i a, __m128i b, const int imm8) {
	switch (imm8 & 0x7F) {
		case 0x00: return _mm_cmpistrz(a, b, 0x00);
		case 0x01: return _mm_cmpistrz(a, b, 0x01);
		case 0x02: return _mm_cmpistrz(a, b, 0x02);
		case 0x03: return _mm_cmpistrz(a, b, 0x03);
		case 0x04: return _mm_cmpistrz(a, b, 0x04);
		case 0x05: return _mm_cmpistrz(a, b, 0x05);
		case 0x06: return _mm_cmpistrz(a, b, 0x06);
		case 0x07: return _mm_cmpistrz(a, b, 0x07);
		case 0x08: return _mm_cmpistrz(a, b, 0x08);
		case 0x09: return _mm_cmpistrz(a, b, 0x09);
		case 0x0A: return _mm_cmpistrz(a, b, 0x0A);
		case 0x0B: return _mm_cmpistrz(a, b, 0x0B);
		case 0x0C: return _mm_cmpistrz(a, b, 0x0C);
		case 0x0D: return _mm_cmpistrz(a, b, 0x0D);
		case 0x0E: return _mm_cmpistrz(a, b, 0x0E);
		case 0x0F: return _mm_cmpistrz(a, b, 0x0F);
		case 0x10: return _mm_cmpistrz(a, b, 0x10);
		case 0x11: return _mm_cmpistrz(a, b, 0x11);
		case 0x12: return _mm_cmpistrz(a, b, 0x12);
		case 0x13: return _mm_cmpistrz(a, b, 0x13);
		case 0x14: return _mm_cmpistrz(a, b, 0x14);
		case 0x15: return _mm_cmpistrz(a, b, 0x15);
		case 0x16: return _mm_cmpistrz(a, b, 0x16);
		case 0x17: return _mm_cmpistrz(a, b, 0x17);
		case 0x18: return _mm_cmpistrz(a, b, 0x18);
		case 0x19: return _mm_cmpistrz(a, b, 0x19);
		case 0x1A: return _mm_cmpistrz(a, b, 0x1A);
		case 0x1B: return _mm_cmpistrz(a, b, 0x1B);
		case 0x1C: return _mm_cmpistrz(a, b, 0x1C);
		case 0x1D: return _mm_cmpistrz(a, b, 0x1D);
		case 0x1E: return _mm_cmpistrz(a, b, 0x1E);
		case 0x1F: return _mm_cmpistrz(a, b, 0x1F);
		case 0x20: return _mm_cmpistrz(a, b, 0x20);
		case 0x21: return _mm_cmpistrz(a, b, 0x21);
		case 0x22: return _mm_cmpistrz(a, b, 0x22);
		case 0x23: return _mm_cmpistrz(a, b, 0x23);
		case 0x24: return _mm_cmpistrz(a, b, 0x24);
		case 0x25: return _mm_cmpistrz(a, b, 0x25);
		case 0x26: return _mm_cmpistrz(a, b, 0x26);
		case 0x27: return _mm_cmpistrz(a, b, 0x27);
		case 0x28: return _mm_cmpistrz(a, b, 0x28);
		case 0x29: return _mm_cmpistrz(a, b, 0x29);
		case 0x2A: return _mm_cmpistrz(a, b, 0x2A);
		case 0x2B: return _mm_cmpistrz(a, b, 0x2B);
		case 0x2C: return _mm_cmpistrz(a, b, 0x2C);
		case 0x2D: return _mm_cmpistrz(a, b, 0x2D);
		case 0x2E: return _mm_cmpistrz(a, b, 0x2E);
		case 0x2F: return _mm_cmpistrz(a, b, 0x2F);
		case 0x30: return _mm_cmpistrz(a, b, 0x30);
		case 0x31: return _mm_cmpistrz(a, b, 0x31);
		case 0x32: return _mm_cmpistrz(a, b, 0x32);
		case 0x33: return _mm_cmpistrz(a, b, 0x33);
		case 0x34: return _mm_cmpistrz(a, b, 0x34);
		case 0x35: return _mm_cmpistrz(a, b, 0x35);
		case 0x36: return _mm_cmpistrz(a, b, 0x36);
		case 0x37: return _mm_cmpistrz(a, b, 0x37);
		case 0x38: return _mm_cmpistrz(a, b, 0x38);
		case 0x39: return _mm_cmpistrz(a, b, 0x39);
		case 0x3A: return _mm_cmpistrz(a, b, 0x3A);
		case 0x3B: return _mm_cmpistrz(a, b, 0x3B);
		case 0x3C: return _mm_cmpistrz(a, b, 0x3C);
		case 0x3D: return _mm_cmpistrz(a, b, 0x3D);
		case 0x3E: return _mm_cmpistrz(a, b, 0x3E);
		case 0x3F: return _mm_cmpistrz(a, b, 0x3F);
		case 0x40: return _mm_cmpistrz(a, b, 0x40);
		case 0x41: return _mm_cmpistrz(a, b, 0x41);
		case 0x42: return _mm_cmpistrz(a, b, 0x42);
		case 0x43: return _mm_cmpistrz(a, b, 0x43);
		case 0x44: return _mm_cmpistrz(a, b, 0x44);
		case 0x45: return _mm_cmpistrz(a, b, 0x45);
		case 0x46: return _mm_cmpistrz(a, b, 0x46);
		case 0x47: return _mm_cmpistrz(a, b, 0x47);
		case 0x48: return _mm_cmpistrz(a, b, 0x48);
		case 0x49: return _mm_cmpistrz(a, b, 0x49);
		case 0x4A: return _mm_cmpistrz(a, b, 0x4A);
		case 0x4B: return _mm_cmpistrz(a, b, 0x4B);
		case 0x4C: return _mm_cmpistrz(a, b, 0x4C);
		case 0x4D: return _mm_cmpistrz(a, b, 0x4D);
		case 0x4E: return _mm_cmpistrz(a, b, 0x4E);
		case 0x4F: return _mm_cmpistrz(a, b, 0x4F);
		case 0x50: return _mm_cmpistrz(a, b, 0x50);
		case 0x51: return _mm_cmpistrz(a, b, 0x51);
		case 0x52: return _mm_cmpistrz(a, b, 0x52);
		case 0x53: return _mm_cmpistrz(a, b, 0x53);
		case 0x54: return _mm_cmpistrz(a, b, 0x54);
		case 0x55: return _mm_cmpistrz(a, b, 0x55);
		case 0x56: return _mm_cmpistrz(a, b, 0x56);
		case 0x57: return _mm_cmpistrz(a, b, 0x57);
		case 0x58: return _mm_cmpistrz(a, b, 0x58);
		case 0x59: return _mm_cmpistrz(a, b, 0x59);
		case 0x5A: return _mm_cmpistrz(a, b, 0x5A);
		case 0x5B: return _mm_cmpistrz(a, b, 0x5B);
		case 0x5C: return _mm_cmpistrz(a, b, 0x5C);
		case 0x5D: return _mm_cmpistrz(a, b, 0x5D);
		case 0x5E: return _mm_cmpistrz(a, b, 0x5E);
		case 0x5F: return _mm_cmpistrz(a, b, 0x5F);
		case 0x60: return _mm_cmpistrz(a, b, 0x60);
		case 0x61: return _mm_cmpistrz(a, b, 0x61);
		case 0x62: return _mm_cmpistrz(a, b, 0x62);
		case 0x63: return _mm_cmpistrz(a, b, 0x63);
		case 0x64: return _mm_cmpistrz(a, b, 0x64);
		case 0x65: return _mm_cmpistrz(a, b, 0x65);
		case 0x66: return _mm_cmpistrz(a, b, 0x66);
		case 0x67: return _mm_cmpistrz(a, b, 0x67);
		case 0x68: return _mm_cmpistrz(a, b, 0x68);
		case 0x69: return _mm_cmpistrz(a, b, 0x69);
		case 0x6A: return _mm_cmpistrz(a, b, 0x6A);
		case 0x6B: return _mm_cmpistrz(a, b, 0x6B);
		case 0x6C: return _mm_cmpistrz(a, b, 0x6C);
		case 0x6D: return _mm_cmpistrz(a, b, 0x6D);
		case 0x6E: return _mm_cmpistrz(a, b, 0x6E);
		case 0x6F: return _mm_cmpistrz(a, b, 0x6F);
		case 0x70: return _mm_cmpistrz(a, b, 0x70);
		case 0x71: return _mm_cmpistrz(a, b, 0x71);
		case 0x72: return _mm_cmpistrz(a, b, 0x72);
		case 0x73: return _mm_cmpistrz(a, b, 0x73);
		case 0x74: return _mm_cmpistrz(a, b, 0x74);
		case 0x75: return _mm_cmpistrz(a, b, 0x75);
		case 0x76: return _mm_cmpistrz(a, b, 0x76);
		case 0x77: return _mm_cmpistrz(a, b, 0x77);
		case 0x78: return _mm_cmpistrz(a, b, 0x78);
		case 0x79: return _mm_cmpistrz(a, b, 0x79);
		case 0x7A: return _mm_cmpistrz(a, b, 0x7A);
		case 0x7B: return _mm_cmpistrz(a, b, 0x7B);
		case 0x7C: return _mm_cmpistrz(a, b, 0x7C);
		case 0x7D: return _mm_cmpistrz(a, b, 0x7D);
		case 0x7E: return _mm_cmpistrz(a, b, 0x7E);
		default:   return _mm_cmpistrz(a, b, 0x7F);
	}
}

unsigned int sse4_2_crc32_u16(unsigned int crc, unsigned short v) { return _mm_crc32_u16(crc, v); }

unsigned int sse4_2_crc32_u32(unsigned int crc, unsigned int v) { return _mm_crc32_u32(crc, v); }

unsigned long long sse4_2_crc32_u64(unsigned long long crc, unsigned long long v) { return _mm_crc32_u64(crc, v); }

unsigned int sse4_2_crc32_u8(unsigned int crc, unsigned char v) { return _mm_crc32_u8(crc, v); }
